/**!
 * MixItUp v3.1.12
 * A high-performance, dependency-free library for animated filtering, sorting and more
 * Build 99123294-5817-4da9-b352-e17eb8780170
 *
 * @copyright Copyright 2014-2017 KunkaLabs Limited.
 * @author    KunkaLabs Limited.
 * @link      https://www.kunkalabs.com/mixitup/
 *
 * @license   Commercial use requires a commercial license.
 *            https://www.kunkalabs.com/mixitup/licenses/
 *
 *            Non-commercial use permitted under same terms as CC BY-NC 3.0 license.
 *            http://creativecommons.org/licenses/by-nc/3.0/
 */
!function(a) {
    "use strict";
    var b = null, c = null, d = null;
    !function() {
        var b = [ "webkit", "moz", "o", "ms" ], c = a.document.createElement("div"), d = -1;
        for (d = 0; d < b.length && !a.requestAnimationFrame; d++) a.requestAnimationFrame = a[b[d] + "RequestAnimationFrame"];
        "undefined" == typeof c.nextElementSibling && Object.defineProperty(a.Element.prototype, "nextElementSibling", {
            get: function() {
                for (var a = this.nextSibling; a; ) {
                    if (1 === a.nodeType) return a;
                    a = a.nextSibling;
                }
                return null;
            }
        }), function(a) {
            a.matches = a.matches || a.machesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector || a.webkitMatchesSelector || function(a) {
                return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(a), this) > -1;
            };
        }(a.Element.prototype), Object.keys || (Object.keys = function() {
            var a = Object.prototype.hasOwnProperty, b = !1, c = [], d = -1;
            return b = !{
                toString: null
            }.propertyIsEnumerable("toString"), c = [ "toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor" ], 
            d = c.length, function(e) {
                var f = [], g = "", h = -1;
                if ("object" != typeof e && ("function" != typeof e || null === e)) throw new TypeError("Object.keys called on non-object");
                for (g in e) a.call(e, g) && f.push(g);
                if (b) for (h = 0; h < d; h++) a.call(e, c[h]) && f.push(c[h]);
                return f;
            };
        }()), Array.isArray || (Array.isArray = function(a) {
            return "[object Array]" === Object.prototype.toString.call(a);
        }), "function" != typeof Object.create && (Object.create = function(a) {
            var b = function() {};
            return function(c, d) {
                if (c !== Object(c) && null !== c) throw TypeError("Argument must be an object, or null");
                b.prototype = c || {};
                var e = new b();
                return b.prototype = null, d !== a && Object.defineProperties(e, d), null === c && (e.__proto__ = null), 
                e;
            };
        }()), String.prototype.trim || (String.prototype.trim = function() {
            return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        }), Array.prototype.indexOf || (Array.prototype.indexOf = function(a) {
            var b, c, d, e;
            if (null === this) throw new TypeError();
            if (d = Object(this), e = d.length >>> 0, 0 === e) return -1;
            if (b = 0, arguments.length > 1 && (b = Number(arguments[1]), b !== b ? b = 0 : 0 !== b && b !== 1 / 0 && b !== -(1 / 0) && (b = (b > 0 || -1) * Math.floor(Math.abs(b)))), 
            b >= e) return -1;
            for (c = b >= 0 ? b : Math.max(e - Math.abs(b), 0); c < e; c++) if (c in d && d[c] === a) return c;
            return -1;
        }), Function.prototype.bind || (Function.prototype.bind = function(a) {
            var b, c, d, e;
            if ("function" != typeof this) throw new TypeError();
            return b = Array.prototype.slice.call(arguments, 1), c = this, d = function() {}, 
            e = function() {
                return c.apply(this instanceof d ? this : a, b.concat(Array.prototype.slice.call(arguments)));
            }, this.prototype && (d.prototype = this.prototype), e.prototype = new d(), e;
        }), a.Element.prototype.dispatchEvent || (a.Element.prototype.dispatchEvent = function(a) {
            try {
                return this.fireEvent("on" + a.type, a);
            } catch (a) {}
        });
    }(), b = function(d, e, f) {
        var g = null, h = !1, i = null, j = null, k = null, l = null, m = [], n = "", o = [], p = -1;
        if (k = f || a.document, (h = arguments[3]) && (h = "boolean" == typeof h), "string" == typeof d) o = k.querySelectorAll(d); else if (d && "object" == typeof d && c.isElement(d, k)) o = [ d ]; else {
            if (!d || "object" != typeof d || !d.length) throw new Error(b.messages.errorFactoryInvalidContainer());
            o = d;
        }
        if (o.length < 1) throw new Error(b.messages.errorFactoryContainerNotFound());
        for (p = 0; (g = o[p]) && (!(p > 0) || h); p++) g.id ? n = g.id : (n = "MixItUp" + c.randomHex(), 
        g.id = n), b.instances[n] instanceof b.Mixer ? (i = b.instances[n], (!e || e && e.debug && e.debug.showWarnings !== !1) && console.warn(b.messages.warningFactoryPreexistingInstance())) : (i = new b.Mixer(), 
        i.attach(g, k, n, e), b.instances[n] = i), j = new b.Facade(i), e && e.debug && e.debug.enable ? m.push(i) : m.push(j);
        return l = h ? new b.Collection(m) : m[0];
    }, b.use = function(a) {
        b.Base.prototype.callActions.call(b, "beforeUse", arguments), "function" == typeof a && "mixitup-extension" === a.TYPE ? "undefined" == typeof b.extensions[a.NAME] && (a(b), 
        b.extensions[a.NAME] = a) : a.fn && a.fn.jquery && (b.libraries.$ = a, b.registerJqPlugin(a)), 
        b.Base.prototype.callActions.call(b, "afterUse", arguments);
    }, b.registerJqPlugin = function(a) {
        a.fn.mixItUp = function() {
            var a = arguments[0], c = arguments[1], d = Array.prototype.slice.call(arguments, 1), e = [], f = [];
            return f = this.each(function() {
                var f = null, g = null;
                a && "string" == typeof a ? (f = b.instances[this.id], g = f[a].apply(f, d), "undefined" != typeof g && null !== g && "function" != typeof g.then && e.push(g)) : b(this, c);
            }), e.length ? e.length > 1 ? e : e[0] : f;
        };
    }, b.instances = {}, b.extensions = {}, b.libraries = {}, c = {
        hasClass: function(a, b) {
            return !!a.className.match(new RegExp("(\\s|^)" + b + "(\\s|$)"));
        },
        addClass: function(a, b) {
            this.hasClass(a, b) || (a.className += a.className ? " " + b : b);
        },
        removeClass: function(a, b) {
            if (this.hasClass(a, b)) {
                var c = new RegExp("(\\s|^)" + b + "(\\s|$)");
                a.className = a.className.replace(c, " ").trim();
            }
        },
        extend: function(a, b, c, d) {
            var e = [], f = "", g = -1;
            c = c || !1, d = d || !1;
            try {
                if (Array.isArray(b)) for (g = 0; g < b.length; g++) e.push(g); else b && (e = Object.keys(b));
                for (g = 0; g < e.length; g++) f = e[g], !c || "object" != typeof b[f] || this.isElement(b[f]) ? a[f] = b[f] : Array.isArray(b[f]) ? (a[f] || (a[f] = []), 
                this.extend(a[f], b[f], c, d)) : (a[f] || (a[f] = {}), this.extend(a[f], b[f], c, d));
            } catch (b) {
                if (!d) throw b;
                this.handleExtendError(b, a);
            }
            return a;
        },
        handleExtendError: function(a, c) {
            var d = /property "?(\w*)"?[,:] object/i, e = null, f = "", g = "", h = "", i = "", j = "", k = -1, l = -1;
            if (a instanceof TypeError && (e = d.exec(a.message))) {
                f = e[1];
                for (j in c) {
                    for (l = 0; l < f.length && f.charAt(l) === j.charAt(l); ) l++;
                    l > k && (k = l, i = j);
                }
                throw k > 1 && (h = b.messages.errorConfigInvalidPropertySuggestion({
                    probableMatch: i
                })), g = b.messages.errorConfigInvalidProperty({
                    erroneous: f,
                    suggestion: h
                }), new TypeError(g);
            }
            throw a;
        },
        template: function(a) {
            for (var b = /\${([\w]*)}/g, c = {}, d = null; d = b.exec(a); ) c[d[1]] = new RegExp("\\${" + d[1] + "}", "g");
            return function(b) {
                var d = "", e = a;
                b = b || {};
                for (d in c) e = e.replace(c[d], "undefined" != typeof b[d] ? b[d] : "");
                return e;
            };
        },
        on: function(b, c, d, e) {
            b && (b.addEventListener ? b.addEventListener(c, d, e) : b.attachEvent && (b["e" + c + d] = d, 
            b[c + d] = function() {
                b["e" + c + d](a.event);
            }, b.attachEvent("on" + c, b[c + d])));
        },
        off: function(a, b, c) {
            a && (a.removeEventListener ? a.removeEventListener(b, c, !1) : a.detachEvent && (a.detachEvent("on" + b, a[b + c]), 
            a[b + c] = null));
        },
        getCustomEvent: function(b, c, d) {
            var e = null;
            return d = d || a.document, "function" == typeof a.CustomEvent ? e = new a.CustomEvent(b, {
                detail: c,
                bubbles: !0,
                cancelable: !0
            }) : "function" == typeof d.createEvent ? (e = d.createEvent("CustomEvent"), e.initCustomEvent(b, !0, !0, c)) : (e = d.createEventObject(), 
            e.type = b, e.returnValue = !1, e.cancelBubble = !1, e.detail = c), e;
        },
        getOriginalEvent: function(a) {
            return a.touches && a.touches.length ? a.touches[0] : a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : a;
        },
        index: function(a, b) {
            for (var c = 0; null !== (a = a.previousElementSibling); ) b && !a.matches(b) || ++c;
            return c;
        },
        camelCase: function(a) {
            return a.toLowerCase().replace(/([_-][a-z])/g, function(a) {
                return a.toUpperCase().replace(/[_-]/, "");
            });
        },
        pascalCase: function(a) {
            return (a = this.camelCase(a)).charAt(0).toUpperCase() + a.slice(1);
        },
        dashCase: function(a) {
            return a.replace(/([A-Z])/g, "-$1").replace(/^-/, "").toLowerCase();
        },
        isElement: function(b, c) {
            return c = c || a.document, !!(a.HTMLElement && b instanceof a.HTMLElement) || (!!(c.defaultView && c.defaultView.HTMLElement && b instanceof c.defaultView.HTMLElement) || null !== b && 1 === b.nodeType && "string" == typeof b.nodeName);
        },
        createElement: function(b, c) {
            var d = null, e = null;
            for (c = c || a.document, d = c.createDocumentFragment(), e = c.createElement("div"), 
            e.innerHTML = b; e.firstChild; ) d.appendChild(e.firstChild);
            return d;
        },
        removeWhitespace: function(a) {
            for (var b; a && "#text" === a.nodeName; ) b = a, a = a.previousSibling, b.parentElement && b.parentElement.removeChild(b);
        },
        isEqualArray: function(a, b) {
            var c = a.length;
            if (c !== b.length) return !1;
            for (;c--; ) if (a[c] !== b[c]) return !1;
            return !0;
        },
        deepEquals: function(a, b) {
            var c;
            if ("object" == typeof a && a && "object" == typeof b && b) {
                if (Object.keys(a).length !== Object.keys(b).length) return !1;
                for (c in a) if (!b.hasOwnProperty(c) || !this.deepEquals(a[c], b[c])) return !1;
            } else if (a !== b) return !1;
            return !0;
        },
        arrayShuffle: function(a) {
            for (var b = a.slice(), c = b.length, d = c, e = -1, f = []; d--; ) e = ~~(Math.random() * c), 
            f = b[d], b[d] = b[e], b[e] = f;
            return b;
        },
        arrayFromList: function(a) {
            var b, c;
            try {
                return Array.prototype.slice.call(a);
            } catch (d) {
                for (b = [], c = 0; c < a.length; c++) b.push(a[c]);
                return b;
            }
        },
        debounce: function(a, b, c) {
            var d;
            return function() {
                var e = this, f = arguments, g = c && !d, h = null;
                h = function() {
                    d = null, c || a.apply(e, f);
                }, clearTimeout(d), d = setTimeout(h, b), g && a.apply(e, f);
            };
        },
        position: function(a) {
            for (var b = 0, c = 0, d = a; a; ) b -= a.scrollLeft, c -= a.scrollTop, a === d && (b += a.offsetLeft, 
            c += a.offsetTop, d = a.offsetParent), a = a.parentElement;
            return {
                x: b,
                y: c
            };
        },
        getHypotenuse: function(a, b) {
            var c = a.x - b.x, d = a.y - b.y;
            return c = c < 0 ? c * -1 : c, d = d < 0 ? d * -1 : d, Math.sqrt(Math.pow(c, 2) + Math.pow(d, 2));
        },
        getIntersectionRatio: function(a, b) {
            var c = a.width * a.height, d = -1, e = -1, f = -1, g = -1;
            return d = Math.max(0, Math.min(a.left + a.width, b.left + b.width) - Math.max(a.left, b.left)), 
            e = Math.max(0, Math.min(a.top + a.height, b.top + b.height) - Math.max(a.top, b.top)), 
            f = e * d, g = f / c;
        },
        closestParent: function(b, c, d, e) {
            var f = b.parentNode;
            if (e = e || a.document, d && b.matches(c)) return b;
            for (;f && f != e.body; ) {
                if (f.matches && f.matches(c)) return f;
                if (!f.parentNode) return null;
                f = f.parentNode;
            }
            return null;
        },
        children: function(b, c, d) {
            var e = [], f = "";
            return d = d || a.doc, b && (b.id || (f = "Temp" + this.randomHexKey(), b.id = f), 
            e = d.querySelectorAll("#" + b.id + " > " + c), f && b.removeAttribute("id")), e;
        },
        clean: function(a) {
            var b = [], c = -1;
            for (c = 0; c < a.length; c++) "" !== a[c] && b.push(a[c]);
            return b;
        },
        defer: function(c) {
            var d = null, e = null, f = null;
            return e = new this.Deferred(), b.features.has.promises ? e.promise = new Promise(function(a, b) {
                e.resolve = a, e.reject = b;
            }) : (f = a.jQuery || c.$) && "function" == typeof f.Deferred ? (d = f.Deferred(), 
            e.promise = d.promise(), e.resolve = d.resolve, e.reject = d.reject) : a.console && console.warn(b.messages.warningNoPromiseImplementation()), 
            e;
        },
        all: function(c, d) {
            var e = null;
            return b.features.has.promises ? Promise.all(c) : (e = a.jQuery || d.$) && "function" == typeof e.when ? e.when.apply(e, c).done(function() {
                return arguments;
            }) : (a.console && console.warn(b.messages.warningNoPromiseImplementation()), []);
        },
        getPrefix: function(a, b, d) {
            var e = -1, f = "";
            if (c.dashCase(b) in a.style) return "";
            for (e = 0; f = d[e]; e++) if (f + b in a.style) return f.toLowerCase();
            return "unsupported";
        },
        randomHex: function() {
            return ("00000" + (16777216 * Math.random() << 0).toString(16)).substr(-6).toUpperCase();
        },
        getDocumentState: function(b) {
            return b = "object" == typeof b.body ? b : a.document, {
                scrollTop: a.pageYOffset,
                scrollLeft: a.pageXOffset,
                docHeight: b.documentElement.scrollHeight,
                docWidth: b.documentElement.scrollWidth,
                viewportHeight: b.documentElement.clientHeight,
                viewportWidth: b.documentElement.clientWidth
            };
        },
        bind: function(a, b) {
            return function() {
                return b.apply(a, arguments);
            };
        },
        isVisible: function(b) {
            var c = null;
            return !!b.offsetParent || (c = a.getComputedStyle(b), "fixed" === c.position && "hidden" !== c.visibility && "0" !== c.opacity);
        },
        seal: function(a) {
            "function" == typeof Object.seal && Object.seal(a);
        },
        freeze: function(a) {
            "function" == typeof Object.freeze && Object.freeze(a);
        },
        compareVersions: function(a, b) {
            var c = a.split("."), d = b.split("."), e = -1, f = -1, g = -1;
            for (g = 0; g < c.length; g++) {
                if (e = parseInt(c[g].replace(/[^\d.]/g, "")), f = parseInt(d[g].replace(/[^\d.]/g, "") || 0), 
                f < e) return !1;
                if (f > e) return !0;
            }
            return !0;
        },
        Deferred: function() {
            this.promise = null, this.resolve = null, this.reject = null, this.id = c.randomHex();
        },
        isEmptyObject: function(a) {
            var b = "";
            if ("function" == typeof Object.keys) return 0 === Object.keys(a).length;
            for (b in a) if (a.hasOwnProperty(b)) return !1;
            return !0;
        },
        getClassname: function(a, b, c) {
            var d = "";
            return d += a.block, d.length && (d += a.delineatorElement), d += a["element" + this.pascalCase(b)], 
            c ? (d.length && (d += a.delineatorModifier), d += c) : d;
        },
        getProperty: function(a, b) {
            var c = b.split("."), d = null, e = "", f = 0;
            if (!b) return a;
            for (d = function(a) {
                return a ? a[e] : null;
            }; f < c.length; ) e = c[f], a = d(a), f++;
            return "undefined" != typeof a ? a : null;
        }
    }, b.h = c, b.Base = function() {}, b.Base.prototype = {
        constructor: b.Base,
        callActions: function(a, b) {
            var d = this, e = d.constructor.actions[a], f = "";
            if (e && !c.isEmptyObject(e)) for (f in e) e[f].apply(d, b);
        },
        callFilters: function(a, b, d) {
            var e = this, f = e.constructor.filters[a], g = b, h = "";
            if (!f || c.isEmptyObject(f)) return g;
            d = d || [];
            for (h in f) d = c.arrayFromList(d), d.unshift(g), g = f[h].apply(e, d);
            return g;
        }
    }, b.BaseStatic = function() {
        this.actions = {}, this.filters = {}, this.extend = function(a) {
            c.extend(this.prototype, a);
        }, this.registerAction = function(a, b, c) {
            (this.actions[a] = this.actions[a] || {})[b] = c;
        }, this.registerFilter = function(a, b, c) {
            (this.filters[a] = this.filters[a] || {})[b] = c;
        };
    }, b.Features = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.boxSizingPrefix = "", 
        this.transformPrefix = "", this.transitionPrefix = "", this.boxSizingPrefix = "", 
        this.transformProp = "", this.transformRule = "", this.transitionProp = "", this.perspectiveProp = "", 
        this.perspectiveOriginProp = "", this.has = new b.Has(), this.canary = null, this.BOX_SIZING_PROP = "boxSizing", 
        this.TRANSITION_PROP = "transition", this.TRANSFORM_PROP = "transform", this.PERSPECTIVE_PROP = "perspective", 
        this.PERSPECTIVE_ORIGIN_PROP = "perspectiveOrigin", this.VENDORS = [ "Webkit", "moz", "O", "ms" ], 
        this.TWEENABLE = [ "opacity", "width", "height", "marginRight", "marginBottom", "x", "y", "scale", "translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ" ], 
        this.callActions("afterConstruct");
    }, b.BaseStatic.call(b.Features), b.Features.prototype = Object.create(b.Base.prototype), 
    c.extend(b.Features.prototype, {
        constructor: b.Features,
        init: function() {
            var a = this;
            a.callActions("beforeInit", arguments), a.canary = document.createElement("div"), 
            a.setPrefixes(), a.runTests(), a.callActions("beforeInit", arguments);
        },
        runTests: function() {
            var b = this;
            b.callActions("beforeRunTests", arguments), b.has.promises = "function" == typeof a.Promise, 
            b.has.transitions = "unsupported" !== b.transitionPrefix, b.callActions("afterRunTests", arguments), 
            c.freeze(b.has);
        },
        setPrefixes: function() {
            var a = this;
            a.callActions("beforeSetPrefixes", arguments), a.transitionPrefix = c.getPrefix(a.canary, "Transition", a.VENDORS), 
            a.transformPrefix = c.getPrefix(a.canary, "Transform", a.VENDORS), a.boxSizingPrefix = c.getPrefix(a.canary, "BoxSizing", a.VENDORS), 
            a.boxSizingProp = a.boxSizingPrefix ? a.boxSizingPrefix + c.pascalCase(a.BOX_SIZING_PROP) : a.BOX_SIZING_PROP, 
            a.transitionProp = a.transitionPrefix ? a.transitionPrefix + c.pascalCase(a.TRANSITION_PROP) : a.TRANSITION_PROP, 
            a.transformProp = a.transformPrefix ? a.transformPrefix + c.pascalCase(a.TRANSFORM_PROP) : a.TRANSFORM_PROP, 
            a.transformRule = a.transformPrefix ? "-" + a.transformPrefix + "-" + a.TRANSFORM_PROP : a.TRANSFORM_PROP, 
            a.perspectiveProp = a.transformPrefix ? a.transformPrefix + c.pascalCase(a.PERSPECTIVE_PROP) : a.PERSPECTIVE_PROP, 
            a.perspectiveOriginProp = a.transformPrefix ? a.transformPrefix + c.pascalCase(a.PERSPECTIVE_ORIGIN_PROP) : a.PERSPECTIVE_ORIGIN_PROP, 
            a.callActions("afterSetPrefixes", arguments);
        }
    }), b.Has = function() {
        this.transitions = !1, this.promises = !1, c.seal(this);
    }, b.features = new b.Features(), b.features.init(), b.ConfigAnimation = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.enable = !0, this.effects = "fade scale", 
        this.effectsIn = "", this.effectsOut = "", this.duration = 600, this.easing = "ease", 
        this.applyPerspective = !0, this.perspectiveDistance = "3000px", this.perspectiveOrigin = "50% 50%", 
        this.queue = !0, this.queueLimit = 3, this.animateResizeContainer = !0, this.animateResizeTargets = !1, 
        this.staggerSequence = null, this.reverseOut = !1, this.nudge = !0, this.clampHeight = !0, 
        this.clampWidth = !0, this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigAnimation), b.ConfigAnimation.prototype = Object.create(b.Base.prototype), 
    b.ConfigAnimation.prototype.constructor = b.ConfigAnimation, b.ConfigBehavior = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.liveSort = !1, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.ConfigBehavior), b.ConfigBehavior.prototype = Object.create(b.Base.prototype), 
    b.ConfigBehavior.prototype.constructor = b.ConfigBehavior, b.ConfigCallbacks = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.onMixStart = null, 
        this.onMixBusy = null, this.onMixEnd = null, this.onMixFail = null, this.onMixClick = null, 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigCallbacks), b.ConfigCallbacks.prototype = Object.create(b.Base.prototype), 
    b.ConfigCallbacks.prototype.constructor = b.ConfigCallbacks, b.ConfigControls = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.enable = !0, this.live = !1, 
        this.scope = "global", this.toggleLogic = "or", this.toggleDefault = "all", this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.ConfigControls), b.ConfigControls.prototype = Object.create(b.Base.prototype), 
    b.ConfigControls.prototype.constructor = b.ConfigControls, b.ConfigClassNames = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.block = "mixitup", 
        this.elementContainer = "container", this.elementFilter = "control", this.elementSort = "control", 
        this.elementMultimix = "control", this.elementToggle = "control", this.modifierActive = "active", 
        this.modifierDisabled = "disabled", this.modifierFailed = "failed", this.delineatorElement = "-", 
        this.delineatorModifier = "-", this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigClassNames), b.ConfigClassNames.prototype = Object.create(b.Base.prototype), 
    b.ConfigClassNames.prototype.constructor = b.ConfigClassNames, b.ConfigData = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.uidKey = "", this.dirtyCheck = !1, 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigData), b.ConfigData.prototype = Object.create(b.Base.prototype), 
    b.ConfigData.prototype.constructor = b.ConfigData, b.ConfigDebug = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.enable = !1, this.showWarnings = !0, 
        this.fauxAsync = !1, this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigDebug), b.ConfigDebug.prototype = Object.create(b.Base.prototype), 
    b.ConfigDebug.prototype.constructor = b.ConfigDebug, b.ConfigLayout = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.allowNestedTargets = !0, 
        this.containerClassName = "", this.siblingBefore = null, this.siblingAfter = null, 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigLayout), b.ConfigLayout.prototype = Object.create(b.Base.prototype), 
    b.ConfigLayout.prototype.constructor = b.ConfigLayout, b.ConfigLoad = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.filter = "all", this.sort = "default:asc", 
        this.dataset = null, this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigLoad), b.ConfigLoad.prototype = Object.create(b.Base.prototype), 
    b.ConfigLoad.prototype.constructor = b.ConfigLoad, b.ConfigSelectors = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.target = ".mix", this.control = "", 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.ConfigSelectors), b.ConfigSelectors.prototype = Object.create(b.Base.prototype), 
    b.ConfigSelectors.prototype.constructor = b.ConfigSelectors, b.ConfigRender = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.target = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.ConfigRender), b.ConfigRender.prototype = Object.create(b.Base.prototype), 
    b.ConfigRender.prototype.constructor = b.ConfigRender, b.ConfigTemplates = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.ConfigTemplates), b.ConfigTemplates.prototype = Object.create(b.Base.prototype), 
    b.ConfigTemplates.prototype.constructor = b.ConfigTemplates, b.Config = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.animation = new b.ConfigAnimation(), 
        this.behavior = new b.ConfigBehavior(), this.callbacks = new b.ConfigCallbacks(), 
        this.controls = new b.ConfigControls(), this.classNames = new b.ConfigClassNames(), 
        this.data = new b.ConfigData(), this.debug = new b.ConfigDebug(), this.layout = new b.ConfigLayout(), 
        this.load = new b.ConfigLoad(), this.selectors = new b.ConfigSelectors(), this.render = new b.ConfigRender(), 
        this.templates = new b.ConfigTemplates(), this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.Config), b.Config.prototype = Object.create(b.Base.prototype), 
    b.Config.prototype.constructor = b.Config, b.MixerDom = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.document = null, this.body = null, 
        this.container = null, this.parent = null, this.targets = [], this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.MixerDom), b.MixerDom.prototype = Object.create(b.Base.prototype), 
    b.MixerDom.prototype.constructor = b.MixerDom, b.UiClassNames = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.base = "", this.active = "", 
        this.disabled = "", this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.UiClassNames), b.UiClassNames.prototype = Object.create(b.Base.prototype), 
    b.UiClassNames.prototype.constructor = b.UiClassNames, b.CommandDataset = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.dataset = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.CommandDataset), b.CommandDataset.prototype = Object.create(b.Base.prototype), 
    b.CommandDataset.prototype.constructor = b.CommandDataset, b.CommandMultimix = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.filter = null, this.sort = null, 
        this.insert = null, this.remove = null, this.changeLayout = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.CommandMultimix), b.CommandMultimix.prototype = Object.create(b.Base.prototype), 
    b.CommandMultimix.prototype.constructor = b.CommandMultimix, b.CommandFilter = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.selector = "", this.collection = null, 
        this.action = "show", this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.CommandFilter), b.CommandFilter.prototype = Object.create(b.Base.prototype), 
    b.CommandFilter.prototype.constructor = b.CommandFilter, b.CommandSort = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.sortString = "", this.attribute = "", 
        this.order = "asc", this.collection = null, this.next = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.CommandSort), b.CommandSort.prototype = Object.create(b.Base.prototype), 
    b.CommandSort.prototype.constructor = b.CommandSort, b.CommandInsert = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.index = 0, this.collection = [], 
        this.position = "before", this.sibling = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.CommandInsert), b.CommandInsert.prototype = Object.create(b.Base.prototype), 
    b.CommandInsert.prototype.constructor = b.CommandInsert, b.CommandRemove = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.targets = [], this.collection = [], 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.CommandRemove), b.CommandRemove.prototype = Object.create(b.Base.prototype), 
    b.CommandRemove.prototype.constructor = b.CommandRemove, b.CommandChangeLayout = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.containerClassName = "", 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.CommandChangeLayout), b.CommandChangeLayout.prototype = Object.create(b.Base.prototype), 
    b.CommandChangeLayout.prototype.constructor = b.CommandChangeLayout, b.ControlDefinition = function(a, d, e, f) {
        b.Base.call(this), this.callActions("beforeConstruct"), this.type = a, this.selector = d, 
        this.live = e || !1, this.parent = f || "", this.callActions("afterConstruct"), 
        c.freeze(this), c.seal(this);
    }, b.BaseStatic.call(b.ControlDefinition), b.ControlDefinition.prototype = Object.create(b.Base.prototype), 
    b.ControlDefinition.prototype.constructor = b.ControlDefinition, b.controlDefinitions = [], 
    b.controlDefinitions.push(new b.ControlDefinition("multimix", "[data-filter][data-sort]")), 
    b.controlDefinitions.push(new b.ControlDefinition("filter", "[data-filter]")), b.controlDefinitions.push(new b.ControlDefinition("sort", "[data-sort]")), 
    b.controlDefinitions.push(new b.ControlDefinition("toggle", "[data-toggle]")), b.Control = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.el = null, this.selector = "", 
        this.bound = [], this.pending = -1, this.type = "", this.status = "inactive", this.filter = "", 
        this.sort = "", this.canDisable = !1, this.handler = null, this.classNames = new b.UiClassNames(), 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.Control), b.Control.prototype = Object.create(b.Base.prototype), 
    c.extend(b.Control.prototype, {
        constructor: b.Control,
        init: function(a, c, d) {
            var e = this;
            if (this.callActions("beforeInit", arguments), e.el = a, e.type = c, e.selector = d, 
            e.selector) e.status = "live"; else switch (e.canDisable = "boolean" == typeof e.el.disable, 
            e.type) {
              case "filter":
                e.filter = e.el.getAttribute("data-filter");
                break;

              case "toggle":
                e.filter = e.el.getAttribute("data-toggle");
                break;

              case "sort":
                e.sort = e.el.getAttribute("data-sort");
                break;

              case "multimix":
                e.filter = e.el.getAttribute("data-filter"), e.sort = e.el.getAttribute("data-sort");
            }
            e.bindClick(), b.controls.push(e), this.callActions("afterInit", arguments);
        },
        isBound: function(a) {
            var b = this, c = !1;
            return this.callActions("beforeIsBound", arguments), c = b.bound.indexOf(a) > -1, 
            b.callFilters("afterIsBound", c, arguments);
        },
        addBinding: function(a) {
            var b = this;
            this.callActions("beforeAddBinding", arguments), b.isBound() || b.bound.push(a), 
            this.callActions("afterAddBinding", arguments);
        },
        removeBinding: function(a) {
            var c = this, d = -1;
            this.callActions("beforeRemoveBinding", arguments), (d = c.bound.indexOf(a)) > -1 && c.bound.splice(d, 1), 
            c.bound.length < 1 && (c.unbindClick(), d = b.controls.indexOf(c), b.controls.splice(d, 1), 
            "active" === c.status && c.renderStatus(c.el, "inactive")), this.callActions("afterRemoveBinding", arguments);
        },
        bindClick: function() {
            var a = this;
            this.callActions("beforeBindClick", arguments), a.handler = function(b) {
                a.handleClick(b);
            }, c.on(a.el, "click", a.handler), this.callActions("afterBindClick", arguments);
        },
        unbindClick: function() {
            var a = this;
            this.callActions("beforeUnbindClick", arguments), c.off(a.el, "click", a.handler), 
            a.handler = null, this.callActions("afterUnbindClick", arguments);
        },
        handleClick: function(a) {
            var d = this, e = null, f = null, g = !1, h = void 0, i = {}, j = null, k = [], l = -1;
            if (this.callActions("beforeHandleClick", arguments), this.pending = 0, f = d.bound[0], 
            e = d.selector ? c.closestParent(a.target, f.config.selectors.control + d.selector, !0, f.dom.document) : d.el, 
            !e) return void d.callActions("afterHandleClick", arguments);
            switch (d.type) {
              case "filter":
                i.filter = d.filter || e.getAttribute("data-filter");
                break;

              case "sort":
                i.sort = d.sort || e.getAttribute("data-sort");
                break;

              case "multimix":
                i.filter = d.filter || e.getAttribute("data-filter"), i.sort = d.sort || e.getAttribute("data-sort");
                break;

              case "toggle":
                i.filter = d.filter || e.getAttribute("data-toggle"), g = "live" === d.status ? c.hasClass(e, d.classNames.active) : "active" === d.status;
            }
            for (l = 0; l < d.bound.length; l++) j = new b.CommandMultimix(), c.extend(j, i), 
            k.push(j);
            for (k = d.callFilters("commandsHandleClick", k, arguments), d.pending = d.bound.length, 
            l = 0; f = d.bound[l]; l++) i = k[l], i && (f.lastClicked || (f.lastClicked = e), 
            b.events.fire("mixClick", f.dom.container, {
                state: f.state,
                instance: f,
                originalEvent: a,
                control: f.lastClicked
            }, f.dom.document), "function" == typeof f.config.callbacks.onMixClick && (h = f.config.callbacks.onMixClick.call(f.lastClicked, f.state, a, f), 
            h === !1) || ("toggle" === d.type ? g ? f.toggleOff(i.filter) : f.toggleOn(i.filter) : f.multimix(i)));
            this.callActions("afterHandleClick", arguments);
        },
        update: function(a, c) {
            var d = this, e = new b.CommandMultimix();
            d.callActions("beforeUpdate", arguments), d.pending--, d.pending = Math.max(0, d.pending), 
            d.pending > 0 || ("live" === d.status ? d.updateLive(a, c) : (e.sort = d.sort, e.filter = d.filter, 
            d.callFilters("actionsUpdate", e, arguments), d.parseStatusChange(d.el, a, e, c)), 
            d.callActions("afterUpdate", arguments));
        },
        updateLive: function(a, c) {
            var d = this, e = null, f = null, g = null, h = -1;
            if (d.callActions("beforeUpdateLive", arguments), d.el) {
                for (e = d.el.querySelectorAll(d.selector), h = 0; g = e[h]; h++) {
                    switch (f = new b.CommandMultimix(), d.type) {
                      case "filter":
                        f.filter = g.getAttribute("data-filter");
                        break;

                      case "sort":
                        f.sort = g.getAttribute("data-sort");
                        break;

                      case "multimix":
                        f.filter = g.getAttribute("data-filter"), f.sort = g.getAttribute("data-sort");
                        break;

                      case "toggle":
                        f.filter = g.getAttribute("data-toggle");
                    }
                    f = d.callFilters("actionsUpdateLive", f, arguments), d.parseStatusChange(g, a, f, c);
                }
                d.callActions("afterUpdateLive", arguments);
            }
        },
        parseStatusChange: function(a, b, c, d) {
            var e = this, f = "", g = "", h = -1;
            switch (e.callActions("beforeParseStatusChange", arguments), e.type) {
              case "filter":
                b.filter === c.filter ? e.renderStatus(a, "active") : e.renderStatus(a, "inactive");
                break;

              case "multimix":
                b.sort === c.sort && b.filter === c.filter ? e.renderStatus(a, "active") : e.renderStatus(a, "inactive");
                break;

              case "sort":
                b.sort.match(/:asc/g) && (f = b.sort.replace(/:asc/g, "")), b.sort === c.sort || f === c.sort ? e.renderStatus(a, "active") : e.renderStatus(a, "inactive");
                break;

              case "toggle":
                for (d.length < 1 && e.renderStatus(a, "inactive"), b.filter === c.filter && e.renderStatus(a, "active"), 
                h = 0; h < d.length; h++) {
                    if (g = d[h], g === c.filter) {
                        e.renderStatus(a, "active");
                        break;
                    }
                    e.renderStatus(a, "inactive");
                }
            }
            e.callActions("afterParseStatusChange", arguments);
        },
        renderStatus: function(a, b) {
            var d = this;
            switch (d.callActions("beforeRenderStatus", arguments), b) {
              case "active":
                c.addClass(a, d.classNames.active), c.removeClass(a, d.classNames.disabled), d.canDisable && (d.el.disabled = !1);
                break;

              case "inactive":
                c.removeClass(a, d.classNames.active), c.removeClass(a, d.classNames.disabled), 
                d.canDisable && (d.el.disabled = !1);
                break;

              case "disabled":
                d.canDisable && (d.el.disabled = !0), c.addClass(a, d.classNames.disabled), c.removeClass(a, d.classNames.active);
            }
            "live" !== d.status && (d.status = b), d.callActions("afterRenderStatus", arguments);
        }
    }), b.controls = [], b.StyleData = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.x = 0, this.y = 0, 
        this.top = 0, this.right = 0, this.bottom = 0, this.left = 0, this.width = 0, this.height = 0, 
        this.marginRight = 0, this.marginBottom = 0, this.opacity = 0, this.scale = new b.TransformData(), 
        this.translateX = new b.TransformData(), this.translateY = new b.TransformData(), 
        this.translateZ = new b.TransformData(), this.rotateX = new b.TransformData(), this.rotateY = new b.TransformData(), 
        this.rotateZ = new b.TransformData(), this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.StyleData), b.StyleData.prototype = Object.create(b.Base.prototype), 
    b.StyleData.prototype.constructor = b.StyleData, b.TransformData = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.value = 0, this.unit = "", 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.TransformData), b.TransformData.prototype = Object.create(b.Base.prototype), 
    b.TransformData.prototype.constructor = b.TransformData, b.TransformDefaults = function() {
        b.StyleData.apply(this), this.callActions("beforeConstruct"), this.scale.value = .01, 
        this.scale.unit = "", this.translateX.value = 20, this.translateX.unit = "px", this.translateY.value = 20, 
        this.translateY.unit = "px", this.translateZ.value = 20, this.translateZ.unit = "px", 
        this.rotateX.value = 90, this.rotateX.unit = "deg", this.rotateY.value = 90, this.rotateY.unit = "deg", 
        this.rotateX.value = 90, this.rotateX.unit = "deg", this.rotateZ.value = 180, this.rotateZ.unit = "deg", 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.TransformDefaults), b.TransformDefaults.prototype = Object.create(b.StyleData.prototype), 
    b.TransformDefaults.prototype.constructor = b.TransformDefaults, b.transformDefaults = new b.TransformDefaults(), 
    b.EventDetail = function() {
        this.state = null, this.futureState = null, this.instance = null, this.originalEvent = null;
    }, b.Events = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.mixStart = null, this.mixBusy = null, 
        this.mixEnd = null, this.mixFail = null, this.mixClick = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.Events), b.Events.prototype = Object.create(b.Base.prototype), 
    b.Events.prototype.constructor = b.Events, b.Events.prototype.fire = function(a, d, e, f) {
        var g = this, h = null, i = new b.EventDetail();
        if (g.callActions("beforeFire", arguments), "undefined" == typeof g[a]) throw new Error('Event type "' + a + '" not found.');
        i.state = new b.State(), c.extend(i.state, e.state), e.futureState && (i.futureState = new b.State(), 
        c.extend(i.futureState, e.futureState)), i.instance = e.instance, e.originalEvent && (i.originalEvent = e.originalEvent), 
        h = c.getCustomEvent(a, i, f), g.callFilters("eventFire", h, arguments), d.dispatchEvent(h);
    }, b.events = new b.Events(), b.QueueItem = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.args = [], this.instruction = null, 
        this.triggerElement = null, this.deferred = null, this.isToggling = !1, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.QueueItem), b.QueueItem.prototype = Object.create(b.Base.prototype), 
    b.QueueItem.prototype.constructor = b.QueueItem, b.Mixer = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.config = new b.Config(), 
        this.id = "", this.isBusy = !1, this.isToggling = !1, this.incPadding = !0, this.controls = [], 
        this.targets = [], this.origOrder = [], this.cache = {}, this.toggleArray = [], 
        this.targetsMoved = 0, this.targetsImmovable = 0, this.targetsBound = 0, this.targetsDone = 0, 
        this.staggerDuration = 0, this.effectsIn = null, this.effectsOut = null, this.transformIn = [], 
        this.transformOut = [], this.queue = [], this.state = null, this.lastOperation = null, 
        this.lastClicked = null, this.userCallback = null, this.userDeferred = null, this.dom = new b.MixerDom(), 
        this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.Mixer), b.Mixer.prototype = Object.create(b.Base.prototype), 
    c.extend(b.Mixer.prototype, {
        constructor: b.Mixer,
        attach: function(d, e, f, g) {
            var h = this, i = null, j = -1;
            for (h.callActions("beforeAttach", arguments), h.id = f, g && c.extend(h.config, g, !0, !0), 
            h.sanitizeConfig(), h.cacheDom(d, e), h.config.layout.containerClassName && c.addClass(h.dom.container, h.config.layout.containerClassName), 
            b.features.has.transitions || (h.config.animation.enable = !1), "undefined" == typeof a.console && (h.config.debug.showWarnings = !1), 
            h.config.data.uidKey && (h.config.controls.enable = !1), h.indexTargets(), h.state = h.getInitialState(), 
            j = 0; i = h.lastOperation.toHide[j]; j++) i.hide();
            h.config.controls.enable && (h.initControls(), h.updateControls({
                filter: h.state.activeFilter,
                sort: h.state.activeSort
            }), h.buildToggleArray(null, h.state)), h.parseEffects(), h.callActions("afterAttach", arguments);
        },
        sanitizeConfig: function() {
            var a = this;
            a.callActions("beforeSanitizeConfig", arguments), a.config.controls.scope = a.config.controls.scope.toLowerCase().trim(), 
            a.config.controls.toggleLogic = a.config.controls.toggleLogic.toLowerCase().trim(), 
            a.config.controls.toggleDefault = a.config.controls.toggleDefault.toLowerCase().trim(), 
            a.config.animation.effects = a.config.animation.effects.trim(), a.callActions("afterSanitizeConfig", arguments);
        },
        getInitialState: function() {
            var a = this, c = new b.State(), d = new b.Operation();
            if (a.callActions("beforeGetInitialState", arguments), c.activeContainerClassName = a.config.layout.containerClassName, 
            a.config.load.dataset) {
                if (!a.config.data.uidKey || "string" != typeof a.config.data.uidKey) throw new TypeError(b.messages.errorConfigDataUidKeyNotSet());
                d.startDataset = d.newDataset = c.activeDataset = a.config.load.dataset.slice(), 
                d.startContainerClassName = d.newContainerClassName = c.activeContainerClassName, 
                d.show = a.targets.slice(), c = a.callFilters("stateGetInitialState", c, arguments);
            } else c.activeFilter = a.parseFilterArgs([ a.config.load.filter ]).command, c.activeSort = a.parseSortArgs([ a.config.load.sort ]).command, 
            c.totalTargets = a.targets.length, c = a.callFilters("stateGetInitialState", c, arguments), 
            c.activeSort.collection || c.activeSort.attribute || "random" === c.activeSort.order || "desc" === c.activeSort.order ? (d.newSort = c.activeSort, 
            a.sortOperation(d), a.printSort(!1, d), a.targets = d.newOrder) : d.startOrder = d.newOrder = a.targets, 
            d.startFilter = d.newFilter = c.activeFilter, d.startSort = d.newSort = c.activeSort, 
            d.startContainerClassName = d.newContainerClassName = c.activeContainerClassName, 
            "all" === d.newFilter.selector ? d.newFilter.selector = a.config.selectors.target : "none" === d.newFilter.selector && (d.newFilter.selector = "");
            return d = a.callFilters("operationGetInitialState", d, [ c ]), a.lastOperation = d, 
            d.newFilter && a.filterOperation(d), c = a.buildState(d);
        },
        cacheDom: function(a, b) {
            var c = this;
            c.callActions("beforeCacheDom", arguments), c.dom.document = b, c.dom.body = c.dom.document.querySelector("body"), 
            c.dom.container = a, c.dom.parent = a, c.callActions("afterCacheDom", arguments);
        },
        indexTargets: function() {
            var a = this, d = null, e = null, f = null, g = -1;
            if (a.callActions("beforeIndexTargets", arguments), a.dom.targets = a.config.layout.allowNestedTargets ? a.dom.container.querySelectorAll(a.config.selectors.target) : c.children(a.dom.container, a.config.selectors.target, a.dom.document), 
            a.dom.targets = c.arrayFromList(a.dom.targets), a.targets = [], (f = a.config.load.dataset) && f.length !== a.dom.targets.length) throw new Error(b.messages.errorDatasetPrerenderedMismatch());
            if (a.dom.targets.length) {
                for (g = 0; e = a.dom.targets[g]; g++) d = new b.Target(), d.init(e, a, f ? f[g] : void 0), 
                d.isInDom = !0, a.targets.push(d);
                a.dom.parent = a.dom.targets[0].parentElement === a.dom.container ? a.dom.container : a.dom.targets[0].parentElement;
            }
            a.origOrder = a.targets, a.callActions("afterIndexTargets", arguments);
        },
        initControls: function() {
            var a = this, c = "", d = null, e = null, f = null, g = null, h = null, i = -1, j = -1;
            switch (a.callActions("beforeInitControls", arguments), a.config.controls.scope) {
              case "local":
                f = a.dom.container;
                break;

              case "global":
                f = a.dom.document;
                break;

              default:
                throw new Error(b.messages.errorConfigInvalidControlsScope());
            }
            for (i = 0; c = b.controlDefinitions[i]; i++) if (a.config.controls.live || c.live) {
                if (c.parent) {
                    if (g = a.dom[c.parent], !g || g.length < 0) continue;
                    "number" != typeof g.length && (g = [ g ]);
                } else g = [ f ];
                for (j = 0; e = g[j]; j++) h = a.getControl(e, c.type, c.selector), a.controls.push(h);
            } else for (d = f.querySelectorAll(a.config.selectors.control + c.selector), j = 0; e = d[j]; j++) h = a.getControl(e, c.type, ""), 
            h && a.controls.push(h);
            a.callActions("afterInitControls", arguments);
        },
        getControl: function(a, d, e) {
            var f = this, g = null, h = -1;
            if (f.callActions("beforeGetControl", arguments), !e) for (h = 0; g = b.controls[h]; h++) {
                if (g.el === a && g.isBound(f)) return f.callFilters("controlGetControl", null, arguments);
                if (g.el === a && g.type === d && g.selector === e) return g.addBinding(f), f.callFilters("controlGetControl", g, arguments);
            }
            return g = new b.Control(), g.init(a, d, e), g.classNames.base = c.getClassname(f.config.classNames, d), 
            g.classNames.active = c.getClassname(f.config.classNames, d, f.config.classNames.modifierActive), 
            g.classNames.disabled = c.getClassname(f.config.classNames, d, f.config.classNames.modifierDisabled), 
            g.addBinding(f), f.callFilters("controlGetControl", g, arguments);
        },
        getToggleSelector: function() {
            var a = this, b = "or" === a.config.controls.toggleLogic ? ", " : "", d = "";
            return a.callActions("beforeGetToggleSelector", arguments), a.toggleArray = c.clean(a.toggleArray), 
            d = a.toggleArray.join(b), "" === d && (d = a.config.controls.toggleDefault), a.callFilters("selectorGetToggleSelector", d, arguments);
        },
        buildToggleArray: function(a, b) {
            var d = this, e = "";
            if (d.callActions("beforeBuildToggleArray", arguments), a && a.filter) e = a.filter.selector.replace(/\s/g, ""); else {
                if (!b) return;
                e = b.activeFilter.selector.replace(/\s/g, "");
            }
            e !== d.config.selectors.target && "all" !== e || (e = ""), "or" === d.config.controls.toggleLogic ? d.toggleArray = e.split(",") : d.toggleArray = d.splitCompoundSelector(e), 
            d.toggleArray = c.clean(d.toggleArray), d.callActions("afterBuildToggleArray", arguments);
        },
        splitCompoundSelector: function(a) {
            var b = a.split(/([\.\[])/g), c = [], d = "", e = -1;
            for ("" === b[0] && b.shift(), e = 0; e < b.length; e++) e % 2 === 0 && (d = ""), 
            d += b[e], e % 2 !== 0 && c.push(d);
            return c;
        },
        updateControls: function(a) {
            var d = this, e = null, f = new b.CommandMultimix(), g = -1;
            for (d.callActions("beforeUpdateControls", arguments), a.filter ? f.filter = a.filter.selector : f.filter = d.state.activeFilter.selector, 
            a.sort ? f.sort = d.buildSortString(a.sort) : f.sort = d.buildSortString(d.state.activeSort), 
            f.filter === d.config.selectors.target && (f.filter = "all"), "" === f.filter && (f.filter = "none"), 
            c.freeze(f), g = 0; e = d.controls[g]; g++) e.update(f, d.toggleArray);
            d.callActions("afterUpdateControls", arguments);
        },
        buildSortString: function(a) {
            var b = this, c = "";
            return c += a.sortString, a.next && (c += " " + b.buildSortString(a.next)), c;
        },
        insertTargets: function(a, d) {
            var e = this, f = null, g = -1, h = null, i = null, j = null, k = -1;
            if (e.callActions("beforeInsertTargets", arguments), "undefined" == typeof a.index && (a.index = 0), 
            f = e.getNextSibling(a.index, a.sibling, a.position), h = e.dom.document.createDocumentFragment(), 
            g = f ? c.index(f, e.config.selectors.target) : e.targets.length, a.collection) {
                for (k = 0; j = a.collection[k]; k++) {
                    if (e.dom.targets.indexOf(j) > -1) throw new Error(b.messages.errorInsertPreexistingElement());
                    j.style.display = "none", h.appendChild(j), h.appendChild(e.dom.document.createTextNode(" ")), 
                    c.isElement(j, e.dom.document) && j.matches(e.config.selectors.target) && (i = new b.Target(), 
                    i.init(j, e), i.isInDom = !0, e.targets.splice(g, 0, i), g++);
                }
                e.dom.parent.insertBefore(h, f);
            }
            d.startOrder = e.origOrder = e.targets, e.callActions("afterInsertTargets", arguments);
        },
        getNextSibling: function(a, b, c) {
            var d = this, e = null;
            return a = Math.max(a, 0), b && "before" === c ? e = b : b && "after" === c ? e = b.nextElementSibling || null : d.targets.length > 0 && "undefined" != typeof a ? e = a < d.targets.length || !d.targets.length ? d.targets[a].dom.el : d.targets[d.targets.length - 1].dom.el.nextElementSibling : 0 === d.targets.length && d.dom.parent.children.length > 0 && (d.config.layout.siblingAfter ? e = d.config.layout.siblingAfter : d.config.layout.siblingBefore ? e = d.config.layout.siblingBefore.nextElementSibling : d.dom.parent.children[0]), 
            d.callFilters("elementGetNextSibling", e, arguments);
        },
        filterOperation: function(a) {
            var b = this, c = !1, d = -1, e = "", f = null, g = -1;
            for (b.callActions("beforeFilterOperation", arguments), e = a.newFilter.action, 
            g = 0; f = a.newOrder[g]; g++) c = a.newFilter.collection ? a.newFilter.collection.indexOf(f.dom.el) > -1 : "" !== a.newFilter.selector && f.dom.el.matches(a.newFilter.selector), 
            b.evaluateHideShow(c, f, e, a);
            if (a.toRemove.length) for (g = 0; f = a.show[g]; g++) a.toRemove.indexOf(f) > -1 && (a.show.splice(g, 1), 
            (d = a.toShow.indexOf(f)) > -1 && a.toShow.splice(d, 1), a.toHide.push(f), a.hide.push(f), 
            g--);
            a.matching = a.show.slice(), 0 === a.show.length && "" !== a.newFilter.selector && 0 !== b.targets.length && (a.hasFailed = !0), 
            b.callActions("afterFilterOperation", arguments);
        },
        evaluateHideShow: function(a, b, c, d) {
            var e = this;
            e.callActions("beforeEvaluateHideShow", arguments), a === !0 && "show" === c || a === !1 && "hide" === c ? (d.show.push(b), 
            !b.isShown && d.toShow.push(b)) : (d.hide.push(b), b.isShown && d.toHide.push(b)), 
            e.callActions("afterEvaluateHideShow", arguments);
        },
        sortOperation: function(a) {
            var b = this;
            b.callActions("beforeSortOperation", arguments), a.startOrder = b.targets, a.newSort.collection ? a.newOrder = a.newSort.collection : "random" === a.newSort.order ? a.newOrder = c.arrayShuffle(a.startOrder) : "" === a.newSort.attribute ? (a.newOrder = b.origOrder.slice(), 
            "desc" === a.newSort.order && a.newOrder.reverse()) : (a.newOrder = a.startOrder.slice(), 
            a.newOrder.sort(function(c, d) {
                return b.compare(c, d, a.newSort);
            })), c.isEqualArray(a.newOrder, a.startOrder) && (a.willSort = !1), b.callActions("afterSortOperation", arguments);
        },
        compare: function(a, b, c) {
            var d = this, e = c.order, f = d.getAttributeValue(a, c.attribute), g = d.getAttributeValue(b, c.attribute);
            return isNaN(1 * f) || isNaN(1 * g) ? (f = f.toLowerCase(), g = g.toLowerCase()) : (f = 1 * f, 
            g = 1 * g), f < g ? "asc" === e ? -1 : 1 : f > g ? "asc" === e ? 1 : -1 : f === g && c.next ? d.compare(a, b, c.next) : 0;
        },
        getAttributeValue: function(a, c) {
            var d = this, e = "";
            return e = a.dom.el.getAttribute("data-" + c), null === e && d.config.debug.showWarnings && console.warn(b.messages.warningInconsistentSortingAttributes({
                attribute: "data-" + c
            })), d.callFilters("valueGetAttributeValue", e || 0, arguments);
        },
        printSort: function(b, d) {
            var e = this, f = b ? d.newOrder : d.startOrder, g = b ? d.startOrder : d.newOrder, h = f.length ? f[f.length - 1].dom.el.nextElementSibling : null, i = a.document.createDocumentFragment(), j = null, k = null, l = null, m = -1;
            for (e.callActions("beforePrintSort", arguments), m = 0; k = f[m]; m++) l = k.dom.el, 
            "absolute" !== l.style.position && (c.removeWhitespace(l.previousSibling), l.parentElement.removeChild(l));
            for (j = h ? h.previousSibling : e.dom.parent.lastChild, j && "#text" === j.nodeName && c.removeWhitespace(j), 
            m = 0; k = g[m]; m++) l = k.dom.el, c.isElement(i.lastChild) && i.appendChild(a.document.createTextNode(" ")), 
            i.appendChild(l);
            e.dom.parent.firstChild && e.dom.parent.firstChild !== h && i.insertBefore(a.document.createTextNode(" "), i.childNodes[0]), 
            h ? (i.appendChild(a.document.createTextNode(" ")), e.dom.parent.insertBefore(i, h)) : e.dom.parent.appendChild(i), 
            e.callActions("afterPrintSort", arguments);
        },
        parseSortString: function(a, d) {
            var e = this, f = a.split(" "), g = d, h = [], i = -1;
            for (i = 0; i < f.length; i++) {
                switch (h = f[i].split(":"), g.sortString = f[i], g.attribute = c.dashCase(h[0]), 
                g.order = h[1] || "asc", g.attribute) {
                  case "default":
                    g.attribute = "";
                    break;

                  case "random":
                    g.attribute = "", g.order = "random";
                }
                if (!g.attribute || "random" === g.order) break;
                i < f.length - 1 && (g.next = new b.CommandSort(), c.freeze(g), g = g.next);
            }
            return e.callFilters("commandsParseSort", d, arguments);
        },
        parseEffects: function() {
            var a = this, c = "", d = a.config.animation.effectsIn || a.config.animation.effects, e = a.config.animation.effectsOut || a.config.animation.effects;
            a.callActions("beforeParseEffects", arguments), a.effectsIn = new b.StyleData(), 
            a.effectsOut = new b.StyleData(), a.transformIn = [], a.transformOut = [], a.effectsIn.opacity = a.effectsOut.opacity = 1, 
            a.parseEffect("fade", d, a.effectsIn, a.transformIn), a.parseEffect("fade", e, a.effectsOut, a.transformOut, !0);
            for (c in b.transformDefaults) b.transformDefaults[c] instanceof b.TransformData && (a.parseEffect(c, d, a.effectsIn, a.transformIn), 
            a.parseEffect(c, e, a.effectsOut, a.transformOut, !0));
            a.parseEffect("stagger", d, a.effectsIn, a.transformIn), a.parseEffect("stagger", e, a.effectsOut, a.transformOut, !0), 
            a.callActions("afterParseEffects", arguments);
        },
        parseEffect: function(a, c, d, e, f) {
            var g = this, h = /\(([^)]+)\)/, i = -1, j = "", k = [], l = "", m = [ "%", "px", "em", "rem", "vh", "vw", "deg" ], n = "", o = -1;
            if (g.callActions("beforeParseEffect", arguments), "string" != typeof c) throw new TypeError(b.messages.errorConfigInvalidAnimationEffects());
            if (c.indexOf(a) < 0) return void ("stagger" === a && (g.staggerDuration = 0));
            switch (i = c.indexOf(a + "("), i > -1 && (j = c.substring(i), k = h.exec(j), l = k[1]), 
            a) {
              case "fade":
                d.opacity = l ? parseFloat(l) : 0;
                break;

              case "stagger":
                g.staggerDuration = l ? parseFloat(l) : 100;
                break;

              default:
                if (f && g.config.animation.reverseOut && "scale" !== a ? d[a].value = (l ? parseFloat(l) : b.transformDefaults[a].value) * -1 : d[a].value = l ? parseFloat(l) : b.transformDefaults[a].value, 
                l) {
                    for (o = 0; n = m[o]; o++) if (l.indexOf(n) > -1) {
                        d[a].unit = n;
                        break;
                    }
                } else d[a].unit = b.transformDefaults[a].unit;
                e.push(a + "(" + d[a].value + d[a].unit + ")");
            }
            g.callActions("afterParseEffect", arguments);
        },
        buildState: function(a) {
            var c = this, d = new b.State(), e = null, f = -1;
            for (c.callActions("beforeBuildState", arguments), f = 0; e = c.targets[f]; f++) (!a.toRemove.length || a.toRemove.indexOf(e) < 0) && d.targets.push(e.dom.el);
            for (f = 0; e = a.matching[f]; f++) d.matching.push(e.dom.el);
            for (f = 0; e = a.show[f]; f++) d.show.push(e.dom.el);
            for (f = 0; e = a.hide[f]; f++) (!a.toRemove.length || a.toRemove.indexOf(e) < 0) && d.hide.push(e.dom.el);
            return d.id = c.id, d.container = c.dom.container, d.activeFilter = a.newFilter, 
            d.activeSort = a.newSort, d.activeDataset = a.newDataset, d.activeContainerClassName = a.newContainerClassName, 
            d.hasFailed = a.hasFailed, d.totalTargets = c.targets.length, d.totalShow = a.show.length, 
            d.totalHide = a.hide.length, d.totalMatching = a.matching.length, d.triggerElement = a.triggerElement, 
            c.callFilters("stateBuildState", d, arguments);
        },
        goMix: function(d, e) {
            var f = this, g = null;
            return f.callActions("beforeGoMix", arguments), f.config.animation.duration && f.config.animation.effects && c.isVisible(f.dom.container) || (d = !1), 
            e.toShow.length || e.toHide.length || e.willSort || e.willChangeLayout || (d = !1), 
            e.startState.show.length || e.show.length || (d = !1), b.events.fire("mixStart", f.dom.container, {
                state: e.startState,
                futureState: e.newState,
                instance: f
            }, f.dom.document), "function" == typeof f.config.callbacks.onMixStart && f.config.callbacks.onMixStart.call(f.dom.container, e.startState, e.newState, f), 
            c.removeClass(f.dom.container, c.getClassname(f.config.classNames, "container", f.config.classNames.modifierFailed)), 
            g = f.userDeferred ? f.userDeferred : f.userDeferred = c.defer(b.libraries), f.isBusy = !0, 
            d && b.features.has.transitions ? (a.pageYOffset !== e.docState.scrollTop && a.scrollTo(e.docState.scrollLeft, e.docState.scrollTop), 
            f.config.animation.applyPerspective && (f.dom.parent.style[b.features.perspectiveProp] = f.config.animation.perspectiveDistance, 
            f.dom.parent.style[b.features.perspectiveOriginProp] = f.config.animation.perspectiveOrigin), 
            f.config.animation.animateResizeContainer && e.startHeight !== e.newHeight && e.viewportDeltaY !== e.startHeight - e.newHeight && (f.dom.parent.style.height = e.startHeight + "px"), 
            f.config.animation.animateResizeContainer && e.startWidth !== e.newWidth && e.viewportDeltaX !== e.startWidth - e.newWidth && (f.dom.parent.style.width = e.startWidth + "px"), 
            e.startHeight === e.newHeight && (f.dom.parent.style.height = e.startHeight + "px"), 
            e.startWidth === e.newWidth && (f.dom.parent.style.width = e.startWidth + "px"), 
            e.startHeight === e.newHeight && e.startWidth === e.newWidth && (f.dom.parent.style.overflow = "hidden"), 
            requestAnimationFrame(function() {
                f.moveTargets(e);
            }), f.callFilters("promiseGoMix", g.promise, arguments)) : (f.config.debug.fauxAsync ? setTimeout(function() {
                f.cleanUp(e);
            }, f.config.animation.duration) : f.cleanUp(e), f.callFilters("promiseGoMix", g.promise, arguments));
        },
        getStartMixData: function(c) {
            var d = this, e = a.getComputedStyle(d.dom.parent), f = d.dom.parent.getBoundingClientRect(), g = null, h = {}, i = -1, j = e[b.features.boxSizingProp];
            for (d.incPadding = "border-box" === j, d.callActions("beforeGetStartMixData", arguments), 
            i = 0; g = c.show[i]; i++) h = g.getPosData(), c.showPosData[i] = {
                startPosData: h
            };
            for (i = 0; g = c.toHide[i]; i++) h = g.getPosData(), c.toHidePosData[i] = {
                startPosData: h
            };
            c.startX = f.left, c.startY = f.top, c.startHeight = d.incPadding ? f.height : f.height - parseFloat(e.paddingTop) - parseFloat(e.paddingBottom) - parseFloat(e.borderTop) - parseFloat(e.borderBottom), 
            c.startWidth = d.incPadding ? f.width : f.width - parseFloat(e.paddingLeft) - parseFloat(e.paddingRight) - parseFloat(e.borderLeft) - parseFloat(e.borderRight), 
            d.callActions("afterGetStartMixData", arguments);
        },
        setInter: function(a) {
            var b = this, d = null, e = -1;
            for (b.callActions("beforeSetInter", arguments), b.config.animation.clampHeight && (b.dom.parent.style.height = a.startHeight + "px", 
            b.dom.parent.style.overflow = "hidden"), b.config.animation.clampWidth && (b.dom.parent.style.width = a.startWidth + "px", 
            b.dom.parent.style.overflow = "hidden"), e = 0; d = a.toShow[e]; e++) d.show();
            a.willChangeLayout && (c.removeClass(b.dom.container, a.startContainerClassName), 
            c.addClass(b.dom.container, a.newContainerClassName)), b.callActions("afterSetInter", arguments);
        },
        getInterMixData: function(a) {
            var b = this, c = null, d = -1;
            for (b.callActions("beforeGetInterMixData", arguments), d = 0; c = a.show[d]; d++) a.showPosData[d].interPosData = c.getPosData();
            for (d = 0; c = a.toHide[d]; d++) a.toHidePosData[d].interPosData = c.getPosData();
            b.callActions("afterGetInterMixData", arguments);
        },
        setFinal: function(a) {
            var b = this, c = null, d = -1;
            for (b.callActions("beforeSetFinal", arguments), a.willSort && b.printSort(!1, a), 
            d = 0; c = a.toHide[d]; d++) c.hide();
            b.callActions("afterSetFinal", arguments);
        },
        getFinalMixData: function(b) {
            var d = this, e = null, f = null, g = null, h = -1;
            for (d.callActions("beforeGetFinalMixData", arguments), h = 0; g = b.show[h]; h++) b.showPosData[h].finalPosData = g.getPosData();
            for (h = 0; g = b.toHide[h]; h++) b.toHidePosData[h].finalPosData = g.getPosData();
            for ((d.config.animation.clampHeight || d.config.animation.clampWidth) && (d.dom.parent.style.height = d.dom.parent.style.width = d.dom.parent.style.overflow = ""), 
            d.incPadding || (e = a.getComputedStyle(d.dom.parent)), f = d.dom.parent.getBoundingClientRect(), 
            b.newX = f.left, b.newY = f.top, b.newHeight = d.incPadding ? f.height : f.height - parseFloat(e.paddingTop) - parseFloat(e.paddingBottom) - parseFloat(e.borderTop) - parseFloat(e.borderBottom), 
            b.newWidth = d.incPadding ? f.width : f.width - parseFloat(e.paddingLeft) - parseFloat(e.paddingRight) - parseFloat(e.borderLeft) - parseFloat(e.borderRight), 
            b.viewportDeltaX = b.docState.viewportWidth - this.dom.document.documentElement.clientWidth, 
            b.viewportDeltaY = b.docState.viewportHeight - this.dom.document.documentElement.clientHeight, 
            b.willSort && d.printSort(!0, b), h = 0; g = b.toShow[h]; h++) g.hide();
            for (h = 0; g = b.toHide[h]; h++) g.show();
            b.willChangeLayout && (c.removeClass(d.dom.container, b.newContainerClassName), 
            c.addClass(d.dom.container, d.config.layout.containerClassName)), d.callActions("afterGetFinalMixData", arguments);
        },
        getTweenData: function(a) {
            var c = this, d = null, e = null, f = Object.getOwnPropertyNames(c.effectsIn), g = "", h = null, i = -1, j = -1, k = -1, l = -1;
            for (c.callActions("beforeGetTweenData", arguments), k = 0; d = a.show[k]; k++) for (e = a.showPosData[k], 
            e.posIn = new b.StyleData(), e.posOut = new b.StyleData(), e.tweenData = new b.StyleData(), 
            d.isShown ? (e.posIn.x = e.startPosData.x - e.interPosData.x, e.posIn.y = e.startPosData.y - e.interPosData.y) : e.posIn.x = e.posIn.y = 0, 
            e.posOut.x = e.finalPosData.x - e.interPosData.x, e.posOut.y = e.finalPosData.y - e.interPosData.y, 
            e.posIn.opacity = d.isShown ? 1 : c.effectsIn.opacity, e.posOut.opacity = 1, e.tweenData.opacity = e.posOut.opacity - e.posIn.opacity, 
            d.isShown || c.config.animation.nudge || (e.posIn.x = e.posOut.x, e.posIn.y = e.posOut.y), 
            e.tweenData.x = e.posOut.x - e.posIn.x, e.tweenData.y = e.posOut.y - e.posIn.y, 
            c.config.animation.animateResizeTargets && (e.posIn.width = e.startPosData.width, 
            e.posIn.height = e.startPosData.height, i = (e.startPosData.width || e.finalPosData.width) - e.interPosData.width, 
            e.posIn.marginRight = e.startPosData.marginRight - i, j = (e.startPosData.height || e.finalPosData.height) - e.interPosData.height, 
            e.posIn.marginBottom = e.startPosData.marginBottom - j, e.posOut.width = e.finalPosData.width, 
            e.posOut.height = e.finalPosData.height, i = (e.finalPosData.width || e.startPosData.width) - e.interPosData.width, 
            e.posOut.marginRight = e.finalPosData.marginRight - i, j = (e.finalPosData.height || e.startPosData.height) - e.interPosData.height, 
            e.posOut.marginBottom = e.finalPosData.marginBottom - j, e.tweenData.width = e.posOut.width - e.posIn.width, 
            e.tweenData.height = e.posOut.height - e.posIn.height, e.tweenData.marginRight = e.posOut.marginRight - e.posIn.marginRight, 
            e.tweenData.marginBottom = e.posOut.marginBottom - e.posIn.marginBottom), l = 0; g = f[l]; l++) h = c.effectsIn[g], 
            h instanceof b.TransformData && h.value && (e.posIn[g].value = h.value, e.posOut[g].value = 0, 
            e.tweenData[g].value = e.posOut[g].value - e.posIn[g].value, e.posIn[g].unit = e.posOut[g].unit = e.tweenData[g].unit = h.unit);
            for (k = 0; d = a.toHide[k]; k++) for (e = a.toHidePosData[k], e.posIn = new b.StyleData(), 
            e.posOut = new b.StyleData(), e.tweenData = new b.StyleData(), e.posIn.x = d.isShown ? e.startPosData.x - e.interPosData.x : 0, 
            e.posIn.y = d.isShown ? e.startPosData.y - e.interPosData.y : 0, e.posOut.x = c.config.animation.nudge ? 0 : e.posIn.x, 
            e.posOut.y = c.config.animation.nudge ? 0 : e.posIn.y, e.tweenData.x = e.posOut.x - e.posIn.x, 
            e.tweenData.y = e.posOut.y - e.posIn.y, c.config.animation.animateResizeTargets && (e.posIn.width = e.startPosData.width, 
            e.posIn.height = e.startPosData.height, i = e.startPosData.width - e.interPosData.width, 
            e.posIn.marginRight = e.startPosData.marginRight - i, j = e.startPosData.height - e.interPosData.height, 
            e.posIn.marginBottom = e.startPosData.marginBottom - j), e.posIn.opacity = 1, e.posOut.opacity = c.effectsOut.opacity, 
            e.tweenData.opacity = e.posOut.opacity - e.posIn.opacity, l = 0; g = f[l]; l++) h = c.effectsOut[g], 
            h instanceof b.TransformData && h.value && (e.posIn[g].value = 0, e.posOut[g].value = h.value, 
            e.tweenData[g].value = e.posOut[g].value - e.posIn[g].value, e.posIn[g].unit = e.posOut[g].unit = e.tweenData[g].unit = h.unit);
            c.callActions("afterGetTweenData", arguments);
        },
        moveTargets: function(a) {
            var d = this, e = null, f = null, g = null, h = "", i = !1, j = -1, k = -1, l = d.checkProgress.bind(d);
            for (d.callActions("beforeMoveTargets", arguments), k = 0; e = a.show[k]; k++) f = new b.IMoveData(), 
            g = a.showPosData[k], h = e.isShown ? "none" : "show", i = d.willTransition(h, a.hasEffect, g.posIn, g.posOut), 
            i && j++, e.show(), f.posIn = g.posIn, f.posOut = g.posOut, f.statusChange = h, 
            f.staggerIndex = j, f.operation = a, f.callback = i ? l : null, e.move(f);
            for (k = 0; e = a.toHide[k]; k++) g = a.toHidePosData[k], f = new b.IMoveData(), 
            h = "hide", i = d.willTransition(h, g.posIn, g.posOut), f.posIn = g.posIn, f.posOut = g.posOut, 
            f.statusChange = h, f.staggerIndex = k, f.operation = a, f.callback = i ? l : null, 
            e.move(f);
            d.config.animation.animateResizeContainer && (d.dom.parent.style[b.features.transitionProp] = "height " + d.config.animation.duration + "ms ease, width " + d.config.animation.duration + "ms ease ", 
            requestAnimationFrame(function() {
                a.startHeight !== a.newHeight && a.viewportDeltaY !== a.startHeight - a.newHeight && (d.dom.parent.style.height = a.newHeight + "px"), 
                a.startWidth !== a.newWidth && a.viewportDeltaX !== a.startWidth - a.newWidth && (d.dom.parent.style.width = a.newWidth + "px");
            })), a.willChangeLayout && (c.removeClass(d.dom.container, d.config.layout.ContainerClassName), 
            c.addClass(d.dom.container, a.newContainerClassName)), d.callActions("afterMoveTargets", arguments);
        },
        hasEffect: function() {
            var a = this, b = [ "scale", "translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ" ], c = "", d = null, e = !1, f = -1, g = -1;
            if (1 !== a.effectsIn.opacity) return a.callFilters("resultHasEffect", !0, arguments);
            for (g = 0; c = b[g]; g++) if (d = a.effectsIn[c], f = "undefined" !== d.value ? d.value : d, 
            0 !== f) {
                e = !0;
                break;
            }
            return a.callFilters("resultHasEffect", e, arguments);
        },
        willTransition: function(a, b, d, e) {
            var f = this, g = !1;
            return g = !!c.isVisible(f.dom.container) && (!!("none" !== a && b || d.x !== e.x || d.y !== e.y) || !!f.config.animation.animateResizeTargets && (d.width !== e.width || d.height !== e.height || d.marginRight !== e.marginRight || d.marginTop !== e.marginTop)), 
            f.callFilters("resultWillTransition", g, arguments);
        },
        checkProgress: function(a) {
            var b = this;
            b.targetsDone++, b.targetsBound === b.targetsDone && b.cleanUp(a);
        },
        cleanUp: function(a) {
            var d = this, e = null, f = null, g = null, h = null, i = -1;
            for (d.callActions("beforeCleanUp", arguments), d.targetsMoved = d.targetsImmovable = d.targetsBound = d.targetsDone = 0, 
            i = 0; e = a.show[i]; i++) e.cleanUp(), e.show();
            for (i = 0; e = a.toHide[i]; i++) e.cleanUp(), e.hide();
            if (a.willSort && d.printSort(!1, a), d.dom.parent.style[b.features.transitionProp] = d.dom.parent.style.height = d.dom.parent.style.width = d.dom.parent.style.overflow = d.dom.parent.style[b.features.perspectiveProp] = d.dom.parent.style[b.features.perspectiveOriginProp] = "", 
            a.willChangeLayout && (c.removeClass(d.dom.container, a.startContainerClassName), 
            c.addClass(d.dom.container, a.newContainerClassName)), a.toRemove.length) {
                for (i = 0; e = d.targets[i]; i++) a.toRemove.indexOf(e) > -1 && ((f = e.dom.el.previousSibling) && "#text" === f.nodeName && (g = e.dom.el.nextSibling) && "#text" === g.nodeName && c.removeWhitespace(f), 
                a.willSort || d.dom.parent.removeChild(e.dom.el), d.targets.splice(i, 1), e.isInDom = !1, 
                i--);
                d.origOrder = d.targets;
            }
            a.willSort && (d.targets = a.newOrder), d.state = a.newState, d.lastOperation = a, 
            d.dom.targets = d.state.targets, b.events.fire("mixEnd", d.dom.container, {
                state: d.state,
                instance: d
            }, d.dom.document), "function" == typeof d.config.callbacks.onMixEnd && d.config.callbacks.onMixEnd.call(d.dom.container, d.state, d), 
            a.hasFailed && (b.events.fire("mixFail", d.dom.container, {
                state: d.state,
                instance: d
            }, d.dom.document), "function" == typeof d.config.callbacks.onMixFail && d.config.callbacks.onMixFail.call(d.dom.container, d.state, d), 
            c.addClass(d.dom.container, c.getClassname(d.config.classNames, "container", d.config.classNames.modifierFailed))), 
            "function" == typeof d.userCallback && d.userCallback.call(d.dom.container, d.state, d), 
            "function" == typeof d.userDeferred.resolve && d.userDeferred.resolve(d.state), 
            d.userCallback = null, d.userDeferred = null, d.lastClicked = null, d.isToggling = !1, 
            d.isBusy = !1, d.queue.length && (d.callActions("beforeReadQueueCleanUp", arguments), 
            h = d.queue.shift(), d.userDeferred = h.deferred, d.isToggling = h.isToggling, d.lastClicked = h.triggerElement, 
            h.instruction.command instanceof b.CommandMultimix ? d.multimix.apply(d, h.args) : d.dataset.apply(d, h.args)), 
            d.callActions("afterCleanUp", arguments);
        },
        parseMultimixArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandMultimix(), 
            g = 0; g < a.length; g++) f = a[g], null !== f && ("object" == typeof f ? c.extend(e.command, f) : "boolean" == typeof f ? e.animate = f : "function" == typeof f && (e.callback = f));
            return !e.command.insert || e.command.insert instanceof b.CommandInsert || (e.command.insert = d.parseInsertArgs([ e.command.insert ]).command), 
            !e.command.remove || e.command.remove instanceof b.CommandRemove || (e.command.remove = d.parseRemoveArgs([ e.command.remove ]).command), 
            !e.command.filter || e.command.filter instanceof b.CommandFilter || (e.command.filter = d.parseFilterArgs([ e.command.filter ]).command), 
            !e.command.sort || e.command.sort instanceof b.CommandSort || (e.command.sort = d.parseSortArgs([ e.command.sort ]).command), 
            !e.command.changeLayout || e.command.changeLayout instanceof b.CommandChangeLayout || (e.command.changeLayout = d.parseChangeLayoutArgs([ e.command.changeLayout ]).command), 
            e = d.callFilters("instructionParseMultimixArgs", e, arguments), c.freeze(e), e;
        },
        parseFilterArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandFilter(), g = 0; g < a.length; g++) f = a[g], 
            "string" == typeof f ? e.command.selector = f : null === f ? e.command.collection = [] : "object" == typeof f && c.isElement(f, d.dom.document) ? e.command.collection = [ f ] : "object" == typeof f && "undefined" != typeof f.length ? e.command.collection = c.arrayFromList(f) : "object" == typeof f ? c.extend(e.command, f) : "boolean" == typeof f ? e.animate = f : "function" == typeof f && (e.callback = f);
            if (e.command.selector && e.command.collection) throw new Error(b.messages.errorFilterInvalidArguments());
            return e = d.callFilters("instructionParseFilterArgs", e, arguments), c.freeze(e), 
            e;
        },
        parseSortArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = "", h = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandSort(), h = 0; h < a.length; h++) if (f = a[h], 
            null !== f) switch (typeof f) {
              case "string":
                g = f;
                break;

              case "object":
                f.length && (e.command.collection = c.arrayFromList(f));
                break;

              case "boolean":
                e.animate = f;
                break;

              case "function":
                e.callback = f;
            }
            return g && (e.command = d.parseSortString(g, e.command)), e = d.callFilters("instructionParseSortArgs", e, arguments), 
            c.freeze(e), e;
        },
        parseInsertArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandInsert(), g = 0; g < a.length; g++) f = a[g], 
            null !== f && ("number" == typeof f ? e.command.index = f : "string" == typeof f && [ "before", "after" ].indexOf(f) > -1 ? e.command.position = f : "string" == typeof f ? e.command.collection = c.arrayFromList(c.createElement(f).childNodes) : "object" == typeof f && c.isElement(f, d.dom.document) ? e.command.collection.length ? e.command.sibling = f : e.command.collection = [ f ] : "object" == typeof f && f.length ? e.command.collection.length ? e.command.sibling = f[0] : e.command.collection = f : "object" == typeof f && f.childNodes && f.childNodes.length ? e.command.collection.length ? e.command.sibling = f.childNodes[0] : e.command.collection = c.arrayFromList(f.childNodes) : "object" == typeof f ? c.extend(e.command, f) : "boolean" == typeof f ? e.animate = f : "function" == typeof f && (e.callback = f));
            if (e.command.index && e.command.sibling) throw new Error(b.messages.errorInsertInvalidArguments());
            return !e.command.collection.length && d.config.debug.showWarnings && console.warn(b.messages.warningInsertNoElements()), 
            e = d.callFilters("instructionParseInsertArgs", e, arguments), c.freeze(e), e;
        },
        parseRemoveArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = null, h = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandRemove(), h = 0; h < a.length; h++) if (g = a[h], 
            null !== g) switch (typeof g) {
              case "number":
                d.targets[g] && (e.command.targets[0] = d.targets[g]);
                break;

              case "string":
                e.command.collection = c.arrayFromList(d.dom.parent.querySelectorAll(g));
                break;

              case "object":
                g && g.length ? e.command.collection = g : c.isElement(g, d.dom.document) ? e.command.collection = [ g ] : c.extend(e.command, g);
                break;

              case "boolean":
                e.animate = g;
                break;

              case "function":
                e.callback = g;
            }
            if (e.command.collection.length) for (h = 0; f = d.targets[h]; h++) e.command.collection.indexOf(f.dom.el) > -1 && e.command.targets.push(f);
            return !e.command.targets.length && d.config.debug.showWarnings && console.warn(b.messages.warningRemoveNoElements()), 
            c.freeze(e), e;
        },
        parseDatasetArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandDataset(), 
            g = 0; g < a.length; g++) if (f = a[g], null !== f) switch (typeof f) {
              case "object":
                Array.isArray(f) || "number" == typeof f.length ? e.command.dataset = f : c.extend(e.command, f);
                break;

              case "boolean":
                e.animate = f;
                break;

              case "function":
                e.callback = f;
            }
            return c.freeze(e), e;
        },
        parseChangeLayoutArgs: function(a) {
            var d = this, e = new b.UserInstruction(), f = null, g = -1;
            for (e.animate = d.config.animation.enable, e.command = new b.CommandChangeLayout(), 
            g = 0; g < a.length; g++) if (f = a[g], null !== f) switch (typeof f) {
              case "string":
                e.command.containerClassName = f;
                break;

              case "object":
                c.extend(e.command, f);
                break;

              case "boolean":
                e.animate = f;
                break;

              case "function":
                e.callback = f;
            }
            return c.freeze(e), e;
        },
        queueMix: function(a) {
            var d = this, e = null, f = "";
            return d.callActions("beforeQueueMix", arguments), e = c.defer(b.libraries), d.config.animation.queue && d.queue.length < d.config.animation.queueLimit ? (a.deferred = e, 
            d.queue.push(a), d.config.controls.enable && (d.isToggling ? (d.buildToggleArray(a.instruction.command), 
            f = d.getToggleSelector(), d.updateControls({
                filter: {
                    selector: f
                }
            })) : d.updateControls(a.instruction.command))) : (d.config.debug.showWarnings && console.warn(b.messages.warningMultimixInstanceQueueFull()), 
            e.resolve(d.state), b.events.fire("mixBusy", d.dom.container, {
                state: d.state,
                instance: d
            }, d.dom.document), "function" == typeof d.config.callbacks.onMixBusy && d.config.callbacks.onMixBusy.call(d.dom.container, d.state, d)), 
            d.callFilters("promiseQueueMix", e.promise, arguments);
        },
        getDataOperation: function(a) {
            var d = this, e = new b.Operation(), f = [];
            if (e = d.callFilters("operationUnmappedGetDataOperation", e, arguments), d.dom.targets.length && !(f = d.state.activeDataset || []).length) throw new Error(b.messages.errorDatasetNotSet());
            return e.id = c.randomHex(), e.startState = d.state, e.startDataset = f, e.newDataset = a.slice(), 
            d.diffDatasets(e), e.startOrder = d.targets, e.newOrder = e.show, d.config.animation.enable && (d.getStartMixData(e), 
            d.setInter(e), e.docState = c.getDocumentState(d.dom.document), d.getInterMixData(e), 
            d.setFinal(e), d.getFinalMixData(e), d.parseEffects(), e.hasEffect = d.hasEffect(), 
            d.getTweenData(e)), d.targets = e.show.slice(), e.newState = d.buildState(e), Array.prototype.push.apply(d.targets, e.toRemove), 
            e = d.callFilters("operationMappedGetDataOperation", e, arguments);
        },
        diffDatasets: function(a) {
            var d = this, e = [], f = [], g = [], h = null, i = null, j = null, k = null, l = null, m = {}, n = "", o = -1;
            for (d.callActions("beforeDiffDatasets", arguments), o = 0; h = a.newDataset[o]; o++) {
                if ("undefined" == typeof (n = h[d.config.data.uidKey]) || n.toString().length < 1) throw new TypeError(b.messages.errorDatasetInvalidUidKey({
                    uidKey: d.config.data.uidKey
                }));
                if (m[n]) throw new Error(b.messages.errorDatasetDuplicateUid({
                    uid: n
                }));
                m[n] = !0, (i = d.cache[n]) instanceof b.Target ? (d.config.data.dirtyCheck && !c.deepEquals(h, i.data) && (j = i.render(h), 
                i.data = h, j !== i.dom.el && (i.isInDom && (i.unbindEvents(), d.dom.parent.replaceChild(j, i.dom.el)), 
                i.isShown || (j.style.display = "none"), i.dom.el = j, i.isInDom && i.bindEvents())), 
                j = i.dom.el) : (i = new b.Target(), i.init(null, d, h), i.hide()), i.isInDom ? (l = i.dom.el.nextElementSibling, 
                f.push(n), k && (k.lastElementChild && k.appendChild(d.dom.document.createTextNode(" ")), 
                d.insertDatasetFrag(k, i.dom.el, d.targets.indexOf(i), g), k = null)) : (k || (k = d.dom.document.createDocumentFragment()), 
                k.lastElementChild && k.appendChild(d.dom.document.createTextNode(" ")), k.appendChild(i.dom.el), 
                i.isInDom = !0, i.unbindEvents(), i.bindEvents(), i.hide(), a.toShow.push(i), g.push(i)), 
                a.show.push(i);
            }
            for (k && (l = l || d.config.layout.siblingAfter, l && k.appendChild(d.dom.document.createTextNode(" ")), 
            d.insertDatasetFrag(k, l, d.dom.targets.length, g)), o = 0; h = a.startDataset[o]; o++) n = h[d.config.data.uidKey], 
            i = d.cache[n], a.show.indexOf(i) < 0 ? (a.hide.push(i), a.toHide.push(i), a.toRemove.push(i)) : e.push(n);
            c.isEqualArray(e, f) || (a.willSort = !0), d.callActions("afterDiffDatasets", arguments);
        },
        insertDatasetFrag: function(a, b, c, d) {
            var e = this;
            for (e.dom.parent.insertBefore(a, b); d.length; ) e.targets.splice(c, 0, d.shift()), 
            c++;
        },
        willSort: function(a, b) {
            var c = this, d = !1;
            return d = !!(c.config.behavior.liveSort || "random" === a.order || a.attribute !== b.attribute || a.order !== b.order || a.collection !== b.collection || null === a.next && b.next || a.next && null === b.next) || !(!a.next || !b.next) && c.willSort(a.next, b.next), 
            c.callFilters("resultWillSort", d, arguments);
        },
        show: function() {
            var a = this;
            return a.filter("all");
        },
        hide: function() {
            var a = this;
            return a.filter("none");
        },
        isMixing: function() {
            var a = this;
            return a.isBusy;
        },
        filter: function() {
            var a = this, b = a.parseFilterArgs(arguments);
            return a.multimix({
                filter: b.command
            }, b.animate, b.callback);
        },
        toggleOn: function() {
            var a = this, b = a.parseFilterArgs(arguments), c = b.command.selector, d = "";
            return a.isToggling = !0, a.toggleArray.indexOf(c) < 0 && a.toggleArray.push(c), 
            d = a.getToggleSelector(), a.multimix({
                filter: d
            }, b.animate, b.callback);
        },
        toggleOff: function() {
            var a = this, b = a.parseFilterArgs(arguments), c = b.command.selector, d = "";
            return a.isToggling = !0, a.toggleArray.splice(a.toggleArray.indexOf(c), 1), d = a.getToggleSelector(), 
            a.multimix({
                filter: d
            }, b.animate, b.callback);
        },
        sort: function() {
            var a = this, b = a.parseSortArgs(arguments);
            return a.multimix({
                sort: b.command
            }, b.animate, b.callback);
        },
        changeLayout: function() {
            var a = this, b = a.parseChangeLayoutArgs(arguments);
            return a.multimix({
                changeLayout: b.command
            }, b.animate, b.callback);
        },
        dataset: function() {
            var a = this, c = a.parseDatasetArgs(arguments), d = null, e = null, f = !1;
            return a.callActions("beforeDataset", arguments), a.isBusy ? (e = new b.QueueItem(), 
            e.args = arguments, e.instruction = c, a.queueMix(e)) : (c.callback && (a.userCallback = c.callback), 
            f = c.animate ^ a.config.animation.enable ? c.animate : a.config.animation.enable, 
            d = a.getDataOperation(c.command.dataset), a.goMix(f, d));
        },
        multimix: function() {
            var a = this, c = null, d = !1, e = null, f = a.parseMultimixArgs(arguments);
            return a.callActions("beforeMultimix", arguments), a.isBusy ? (e = new b.QueueItem(), 
            e.args = arguments, e.instruction = f, e.triggerElement = a.lastClicked, e.isToggling = a.isToggling, 
            a.queueMix(e)) : (c = a.getOperation(f.command), a.config.controls.enable && (f.command.filter && !a.isToggling && (a.toggleArray.length = 0, 
            a.buildToggleArray(c.command)), a.queue.length < 1 && a.updateControls(c.command)), 
            f.callback && (a.userCallback = f.callback), d = f.animate ^ a.config.animation.enable ? f.animate : a.config.animation.enable, 
            a.callFilters("operationMultimix", c, arguments), a.goMix(d, c));
        },
        getOperation: function(a) {
            var d = this, e = a.sort, f = a.filter, g = a.changeLayout, h = a.remove, i = a.insert, j = new b.Operation();
            return j = d.callFilters("operationUnmappedGetOperation", j, arguments), j.id = c.randomHex(), 
            j.command = a, j.startState = d.state, j.triggerElement = d.lastClicked, d.isBusy ? (d.config.debug.showWarnings && console.warn(b.messages.warningGetOperationInstanceBusy()), 
            null) : (i && d.insertTargets(i, j), h && (j.toRemove = h.targets), j.startSort = j.newSort = j.startState.activeSort, 
            j.startOrder = j.newOrder = d.targets, e && (j.startSort = j.startState.activeSort, 
            j.newSort = e, j.willSort = d.willSort(e, j.startState.activeSort), j.willSort && d.sortOperation(j)), 
            j.startFilter = j.startState.activeFilter, f ? j.newFilter = f : j.newFilter = c.extend(new b.CommandFilter(), j.startFilter), 
            "all" === j.newFilter.selector ? j.newFilter.selector = d.config.selectors.target : "none" === j.newFilter.selector && (j.newFilter.selector = ""), 
            d.filterOperation(j), j.startContainerClassName = j.startState.activeContainerClassName, 
            g ? (j.newContainerClassName = g.containerClassName, j.newContainerClassName !== j.startContainerClassName && (j.willChangeLayout = !0)) : j.newContainerClassName = j.startContainerClassName, 
            d.config.animation.enable && (d.getStartMixData(j), d.setInter(j), j.docState = c.getDocumentState(d.dom.document), 
            d.getInterMixData(j), d.setFinal(j), d.getFinalMixData(j), d.parseEffects(), j.hasEffect = d.hasEffect(), 
            d.getTweenData(j)), j.willSort && (d.targets = j.newOrder), j.newState = d.buildState(j), 
            d.callFilters("operationMappedGetOperation", j, arguments));
        },
        tween: function(a, b) {
            var c = null, d = null, e = -1, f = -1;
            for (b = Math.min(b, 1), b = Math.max(b, 0), f = 0; c = a.show[f]; f++) d = a.showPosData[f], 
            c.applyTween(d, b);
            for (f = 0; c = a.hide[f]; f++) c.isShown && c.hide(), (e = a.toHide.indexOf(c)) > -1 && (d = a.toHidePosData[e], 
            c.isShown || c.show(), c.applyTween(d, b));
        },
        insert: function() {
            var a = this, b = a.parseInsertArgs(arguments);
            return a.multimix({
                insert: b.command
            }, b.animate, b.callback);
        },
        insertBefore: function() {
            var a = this, b = a.parseInsertArgs(arguments);
            return a.insert(b.command.collection, "before", b.command.sibling, b.animate, b.callback);
        },
        insertAfter: function() {
            var a = this, b = a.parseInsertArgs(arguments);
            return a.insert(b.command.collection, "after", b.command.sibling, b.animate, b.callback);
        },
        prepend: function() {
            var a = this, b = a.parseInsertArgs(arguments);
            return a.insert(0, b.command.collection, b.animate, b.callback);
        },
        append: function() {
            var a = this, b = a.parseInsertArgs(arguments);
            return a.insert(a.state.totalTargets, b.command.collection, b.animate, b.callback);
        },
        remove: function() {
            var a = this, b = a.parseRemoveArgs(arguments);
            return a.multimix({
                remove: b.command
            }, b.animate, b.callback);
        },
        getConfig: function(a) {
            var b = this, d = null;
            return d = a ? c.getProperty(b.config, a) : b.config, b.callFilters("valueGetConfig", d, arguments);
        },
        configure: function(a) {
            var b = this;
            b.callActions("beforeConfigure", arguments), c.extend(b.config, a, !0, !0), b.callActions("afterConfigure", arguments);
        },
        getState: function() {
            var a = this, d = null;
            return d = new b.State(), c.extend(d, a.state), c.freeze(d), a.callFilters("stateGetState", d, arguments);
        },
        forceRefresh: function() {
            var a = this;
            a.indexTargets();
        },
        destroy: function(a) {
            var c = this, d = null, e = null, f = 0;
            for (c.callActions("beforeDestroy", arguments), f = 0; d = c.controls[f]; f++) d.removeBinding(c);
            for (f = 0; e = c.targets[f]; f++) a && e.show(), e.unbindEvents();
            c.dom.container.id.match(/^MixItUp/) && c.dom.container.removeAttribute("id"), delete b.instances[c.id], 
            c.callActions("afterDestroy", arguments);
        }
    }), b.IMoveData = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.posIn = null, this.posOut = null, 
        this.operation = null, this.callback = null, this.statusChange = "", this.duration = -1, 
        this.staggerIndex = -1, this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.IMoveData), b.IMoveData.prototype = Object.create(b.Base.prototype), 
    b.IMoveData.prototype.constructor = b.IMoveData, b.TargetDom = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.el = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.TargetDom), b.TargetDom.prototype = Object.create(b.Base.prototype), 
    b.TargetDom.prototype.constructor = b.TargetDom, b.Target = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.id = "", this.sortString = "", 
        this.mixer = null, this.callback = null, this.isShown = !1, this.isBound = !1, this.isExcluded = !1, 
        this.isInDom = !1, this.handler = null, this.operation = null, this.data = null, 
        this.dom = new b.TargetDom(), this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.Target), b.Target.prototype = Object.create(b.Base.prototype), 
    c.extend(b.Target.prototype, {
        constructor: b.Target,
        init: function(a, c, d) {
            var e = this, f = "";
            if (e.callActions("beforeInit", arguments), e.mixer = c, a || (a = e.render(d)), 
            e.cacheDom(a), e.bindEvents(), "none" !== e.dom.el.style.display && (e.isShown = !0), 
            d && c.config.data.uidKey) {
                if ("undefined" == typeof (f = d[c.config.data.uidKey]) || f.toString().length < 1) throw new TypeError(b.messages.errorDatasetInvalidUidKey({
                    uidKey: c.config.data.uidKey
                }));
                e.id = f, e.data = d, c.cache[f] = e;
            }
            e.callActions("afterInit", arguments);
        },
        render: function(a) {
            var d = this, e = null, f = null, g = null, h = "";
            if (d.callActions("beforeRender", arguments), e = d.callFilters("renderRender", d.mixer.config.render.target, arguments), 
            "function" != typeof e) throw new TypeError(b.messages.errorDatasetRendererNotSet());
            return h = e(a), h && "object" == typeof h && c.isElement(h) ? f = h : "string" == typeof h && (g = document.createElement("div"), 
            g.innerHTML = h, f = g.firstElementChild), d.callFilters("elRender", f, arguments);
        },
        cacheDom: function(a) {
            var b = this;
            b.callActions("beforeCacheDom", arguments), b.dom.el = a, b.callActions("afterCacheDom", arguments);
        },
        getSortString: function(a) {
            var b = this, c = b.dom.el.getAttribute("data-" + a) || "";
            b.callActions("beforeGetSortString", arguments), c = isNaN(1 * c) ? c.toLowerCase() : 1 * c, 
            b.sortString = c, b.callActions("afterGetSortString", arguments);
        },
        show: function() {
            var a = this;
            a.callActions("beforeShow", arguments), a.isShown || (a.dom.el.style.display = "", 
            a.isShown = !0), a.callActions("afterShow", arguments);
        },
        hide: function() {
            var a = this;
            a.callActions("beforeHide", arguments), a.isShown && (a.dom.el.style.display = "none", 
            a.isShown = !1), a.callActions("afterHide", arguments);
        },
        move: function(a) {
            var b = this;
            b.callActions("beforeMove", arguments), b.isExcluded || b.mixer.targetsMoved++, 
            b.applyStylesIn(a), requestAnimationFrame(function() {
                b.applyStylesOut(a);
            }), b.callActions("afterMove", arguments);
        },
        applyTween: function(a, c) {
            var d = this, e = "", f = null, g = a.posIn, h = [], i = new b.StyleData(), j = -1;
            for (d.callActions("beforeApplyTween", arguments), i.x = g.x, i.y = g.y, 0 === c ? d.hide() : d.isShown || d.show(), 
            j = 0; e = b.features.TWEENABLE[j]; j++) if (f = a.tweenData[e], "x" === e) {
                if (!f) continue;
                i.x = g.x + f * c;
            } else if ("y" === e) {
                if (!f) continue;
                i.y = g.y + f * c;
            } else if (f instanceof b.TransformData) {
                if (!f.value) continue;
                i[e].value = g[e].value + f.value * c, i[e].unit = f.unit, h.push(e + "(" + i[e].value + f.unit + ")");
            } else {
                if (!f) continue;
                i[e] = g[e] + f * c, d.dom.el.style[e] = i[e];
            }
            (i.x || i.y) && h.unshift("translate(" + i.x + "px, " + i.y + "px)"), h.length && (d.dom.el.style[b.features.transformProp] = h.join(" ")), 
            d.callActions("afterApplyTween", arguments);
        },
        applyStylesIn: function(a) {
            var c = this, d = a.posIn, e = 1 !== c.mixer.effectsIn.opacity, f = [];
            c.callActions("beforeApplyStylesIn", arguments), f.push("translate(" + d.x + "px, " + d.y + "px)"), 
            c.mixer.config.animation.animateResizeTargets && ("show" !== a.statusChange && (c.dom.el.style.width = d.width + "px", 
            c.dom.el.style.height = d.height + "px"), c.dom.el.style.marginRight = d.marginRight + "px", 
            c.dom.el.style.marginBottom = d.marginBottom + "px"), e && (c.dom.el.style.opacity = d.opacity), 
            "show" === a.statusChange && (f = f.concat(c.mixer.transformIn)), c.dom.el.style[b.features.transformProp] = f.join(" "), 
            c.callActions("afterApplyStylesIn", arguments);
        },
        applyStylesOut: function(a) {
            var c = this, d = [], e = [], f = c.mixer.config.animation.animateResizeTargets, g = "undefined" != typeof c.mixer.effectsIn.opacity;
            if (c.callActions("beforeApplyStylesOut", arguments), d.push(c.writeTransitionRule(b.features.transformRule, a.staggerIndex)), 
            "none" !== a.statusChange && d.push(c.writeTransitionRule("opacity", a.staggerIndex, a.duration)), 
            f && (d.push(c.writeTransitionRule("width", a.staggerIndex, a.duration)), d.push(c.writeTransitionRule("height", a.staggerIndex, a.duration)), 
            d.push(c.writeTransitionRule("margin", a.staggerIndex, a.duration))), !a.callback) return c.mixer.targetsImmovable++, 
            void (c.mixer.targetsMoved === c.mixer.targetsImmovable && c.mixer.cleanUp(a.operation));
            switch (c.operation = a.operation, c.callback = a.callback, !c.isExcluded && c.mixer.targetsBound++, 
            c.isBound = !0, c.applyTransition(d), f && a.posOut.width > 0 && a.posOut.height > 0 && (c.dom.el.style.width = a.posOut.width + "px", 
            c.dom.el.style.height = a.posOut.height + "px", c.dom.el.style.marginRight = a.posOut.marginRight + "px", 
            c.dom.el.style.marginBottom = a.posOut.marginBottom + "px"), c.mixer.config.animation.nudge || "hide" !== a.statusChange || e.push("translate(" + a.posOut.x + "px, " + a.posOut.y + "px)"), 
            a.statusChange) {
              case "hide":
                g && (c.dom.el.style.opacity = c.mixer.effectsOut.opacity), e = e.concat(c.mixer.transformOut);
                break;

              case "show":
                g && (c.dom.el.style.opacity = 1);
            }
            (c.mixer.config.animation.nudge || !c.mixer.config.animation.nudge && "hide" !== a.statusChange) && e.push("translate(" + a.posOut.x + "px, " + a.posOut.y + "px)"), 
            c.dom.el.style[b.features.transformProp] = e.join(" "), c.callActions("afterApplyStylesOut", arguments);
        },
        writeTransitionRule: function(a, b, c) {
            var d = this, e = d.getDelay(b), f = "";
            return f = a + " " + (c > 0 ? c : d.mixer.config.animation.duration) + "ms " + e + "ms " + ("opacity" === a ? "linear" : d.mixer.config.animation.easing), 
            d.callFilters("ruleWriteTransitionRule", f, arguments);
        },
        getDelay: function(a) {
            var b = this, c = -1;
            return "function" == typeof b.mixer.config.animation.staggerSequence && (a = b.mixer.config.animation.staggerSequence.call(b, a, b.state)), 
            c = b.mixer.staggerDuration ? a * b.mixer.staggerDuration : 0, b.callFilters("delayGetDelay", c, arguments);
        },
        applyTransition: function(a) {
            var c = this, d = a.join(", ");
            c.callActions("beforeApplyTransition", arguments), c.dom.el.style[b.features.transitionProp] = d, 
            c.callActions("afterApplyTransition", arguments);
        },
        handleTransitionEnd: function(a) {
            var b = this, c = a.propertyName, d = b.mixer.config.animation.animateResizeTargets;
            b.callActions("beforeHandleTransitionEnd", arguments), b.isBound && a.target.matches(b.mixer.config.selectors.target) && (c.indexOf("transform") > -1 || c.indexOf("opacity") > -1 || d && c.indexOf("height") > -1 || d && c.indexOf("width") > -1 || d && c.indexOf("margin") > -1) && (b.callback.call(b, b.operation), 
            b.isBound = !1, b.callback = null, b.operation = null), b.callActions("afterHandleTransitionEnd", arguments);
        },
        eventBus: function(a) {
            var b = this;
            switch (b.callActions("beforeEventBus", arguments), a.type) {
              case "webkitTransitionEnd":
              case "transitionend":
                b.handleTransitionEnd(a);
            }
            b.callActions("afterEventBus", arguments);
        },
        unbindEvents: function() {
            var a = this;
            a.callActions("beforeUnbindEvents", arguments), c.off(a.dom.el, "webkitTransitionEnd", a.handler), 
            c.off(a.dom.el, "transitionend", a.handler), a.callActions("afterUnbindEvents", arguments);
        },
        bindEvents: function() {
            var a = this, d = "";
            a.callActions("beforeBindEvents", arguments), d = "webkit" === b.features.transitionPrefix ? "webkitTransitionEnd" : "transitionend", 
            a.handler = function(b) {
                return a.eventBus(b);
            }, c.on(a.dom.el, d, a.handler), a.callActions("afterBindEvents", arguments);
        },
        getPosData: function(c) {
            var d = this, e = {}, f = null, g = new b.StyleData();
            return d.callActions("beforeGetPosData", arguments), g.x = d.dom.el.offsetLeft, 
            g.y = d.dom.el.offsetTop, (d.mixer.config.animation.animateResizeTargets || c) && (f = d.dom.el.getBoundingClientRect(), 
            g.top = f.top, g.right = f.right, g.bottom = f.bottom, g.left = f.left, g.width = f.width, 
            g.height = f.height), d.mixer.config.animation.animateResizeTargets && (e = a.getComputedStyle(d.dom.el), 
            g.marginBottom = parseFloat(e.marginBottom), g.marginRight = parseFloat(e.marginRight)), 
            d.callFilters("posDataGetPosData", g, arguments);
        },
        cleanUp: function() {
            var a = this;
            a.callActions("beforeCleanUp", arguments), a.dom.el.style[b.features.transformProp] = "", 
            a.dom.el.style[b.features.transitionProp] = "", a.dom.el.style.opacity = "", a.mixer.config.animation.animateResizeTargets && (a.dom.el.style.width = "", 
            a.dom.el.style.height = "", a.dom.el.style.marginRight = "", a.dom.el.style.marginBottom = ""), 
            a.callActions("afterCleanUp", arguments);
        }
    }), b.Collection = function(a) {
        var b = null, d = -1;
        for (this.callActions("beforeConstruct"), d = 0; b = a[d]; d++) this[d] = b;
        this.length = a.length, this.callActions("afterConstruct"), c.freeze(this);
    }, b.BaseStatic.call(b.Collection), b.Collection.prototype = Object.create(b.Base.prototype), 
    c.extend(b.Collection.prototype, {
        constructor: b.Collection,
        mixitup: function(a) {
            var d = this, e = null, f = Array.prototype.slice.call(arguments), g = [], h = -1;
            for (this.callActions("beforeMixitup"), f.shift(), h = 0; e = d[h]; h++) g.push(e[a].apply(e, f));
            return d.callFilters("promiseMixitup", c.all(g, b.libraries), arguments);
        }
    }), b.Operation = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.id = "", this.args = [], 
        this.command = null, this.showPosData = [], this.toHidePosData = [], this.startState = null, 
        this.newState = null, this.docState = null, this.willSort = !1, this.willChangeLayout = !1, 
        this.hasEffect = !1, this.hasFailed = !1, this.triggerElement = null, this.show = [], 
        this.hide = [], this.matching = [], this.toShow = [], this.toHide = [], this.toMove = [], 
        this.toRemove = [], this.startOrder = [], this.newOrder = [], this.startSort = null, 
        this.newSort = null, this.startFilter = null, this.newFilter = null, this.startDataset = null, 
        this.newDataset = null, this.viewportDeltaX = 0, this.viewportDeltaY = 0, this.startX = 0, 
        this.startY = 0, this.startHeight = 0, this.startWidth = 0, this.newX = 0, this.newY = 0, 
        this.newHeight = 0, this.newWidth = 0, this.startContainerClassName = "", this.startDisplay = "", 
        this.newContainerClassName = "", this.newDisplay = "", this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.Operation), b.Operation.prototype = Object.create(b.Base.prototype), 
    b.Operation.prototype.constructor = b.Operation, b.State = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.id = "", this.activeFilter = null, 
        this.activeSort = null, this.activeContainerClassName = "", this.container = null, 
        this.targets = [], this.hide = [], this.show = [], this.matching = [], this.totalTargets = -1, 
        this.totalShow = -1, this.totalHide = -1, this.totalMatching = -1, this.hasFailed = !1, 
        this.triggerElement = null, this.activeDataset = null, this.callActions("afterConstruct"), 
        c.seal(this);
    }, b.BaseStatic.call(b.State), b.State.prototype = Object.create(b.Base.prototype), 
    b.State.prototype.constructor = b.State, b.UserInstruction = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.command = {}, this.animate = !1, 
        this.callback = null, this.callActions("afterConstruct"), c.seal(this);
    }, b.BaseStatic.call(b.UserInstruction), b.UserInstruction.prototype = Object.create(b.Base.prototype), 
    b.UserInstruction.prototype.constructor = b.UserInstruction, b.Messages = function() {
        b.Base.call(this), this.callActions("beforeConstruct"), this.ERROR_FACTORY_INVALID_CONTAINER = "[MixItUp] An invalid selector or element reference was passed to the mixitup factory function", 
        this.ERROR_FACTORY_CONTAINER_NOT_FOUND = "[MixItUp] The provided selector yielded no container element", 
        this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS = "[MixItUp] Invalid value for `animation.effects`", 
        this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE = "[MixItUp] Invalid value for `controls.scope`", 
        this.ERROR_CONFIG_INVALID_PROPERTY = '[MixitUp] Invalid configuration object property "${erroneous}"${suggestion}', 
        this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION = '. Did you mean "${probableMatch}"?', 
        this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET = "[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`", 
        this.ERROR_DATASET_INVALID_UID_KEY = '[MixItUp] The specified UID key "${uidKey}" is not present on one or more dataset items', 
        this.ERROR_DATASET_DUPLICATE_UID = '[MixItUp] The UID "${uid}" was found on two or more dataset items. UIDs must be unique.', 
        this.ERROR_INSERT_INVALID_ARGUMENTS = "[MixItUp] Please provider either an index or a sibling and position to insert, not both", 
        this.ERROR_INSERT_PREEXISTING_ELEMENT = "[MixItUp] An element to be inserted already exists in the container", 
        this.ERROR_FILTER_INVALID_ARGUMENTS = "[MixItUp] Please provide either a selector or collection `.filter()`, not both", 
        this.ERROR_DATASET_NOT_SET = "[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`", 
        this.ERROR_DATASET_PRERENDERED_MISMATCH = "[MixItUp] `load.dataset` does not match pre-rendered targets", 
        this.ERROR_DATASET_RENDERER_NOT_SET = "[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`", 
        this.WARNING_FACTORY_PREEXISTING_INSTANCE = "[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored. If you wish to perform additional methods on this instance, please create a reference.", 
        this.WARNING_INSERT_NO_ELEMENTS = "[MixItUp] WARNING: No valid elements were passed to `.insert()`", 
        this.WARNING_REMOVE_NO_ELEMENTS = "[MixItUp] WARNING: No valid elements were passed to `.remove()`", 
        this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL = "[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the queue is full or queuing is disabled.", 
        this.WARNING_GET_OPERATION_INSTANCE_BUSY = "[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.", 
        this.WARNING_NO_PROMISE_IMPLEMENTATION = "[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install an ES6 Promise polyfill.", 
        this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES = '[MixItUp] WARNING: The requested sorting data attribute "${attribute}" was not present on one or more target elements which may product unexpected sort output', 
        this.callActions("afterConstruct"), this.compileTemplates(), c.seal(this);
    }, b.BaseStatic.call(b.Messages), b.Messages.prototype = Object.create(b.Base.prototype), 
    b.Messages.prototype.constructor = b.Messages, b.Messages.prototype.compileTemplates = function() {
        var a = "", b = "";
        for (a in this) "string" == typeof (b = this[a]) && (this[c.camelCase(a)] = c.template(b));
    }, b.messages = new b.Messages(), b.Facade = function(a) {
        b.Base.call(this), this.callActions("beforeConstruct", arguments), this.configure = a.configure.bind(a), 
        this.show = a.show.bind(a), this.hide = a.hide.bind(a), this.filter = a.filter.bind(a), 
        this.toggleOn = a.toggleOn.bind(a), this.toggleOff = a.toggleOff.bind(a), this.sort = a.sort.bind(a), 
        this.changeLayout = a.changeLayout.bind(a), this.multimix = a.multimix.bind(a), 
        this.multiMix = a.multimix.bind(a), this.dataset = a.dataset.bind(a), this.tween = a.tween.bind(a), 
        this.insert = a.insert.bind(a), this.insertBefore = a.insertBefore.bind(a), this.insertAfter = a.insertAfter.bind(a), 
        this.prepend = a.prepend.bind(a), this.append = a.append.bind(a), this.remove = a.remove.bind(a), 
        this.destroy = a.destroy.bind(a), this.forceRefresh = a.forceRefresh.bind(a), this.isMixing = a.isMixing.bind(a), 
        this.getOperation = a.getOperation.bind(a), this.getConfig = a.getConfig.bind(a), 
        this.getState = a.getState.bind(a), this.callActions("afterConstruct", arguments), 
        c.freeze(this), c.seal(this);
    }, b.BaseStatic.call(b.Facade), b.Facade.prototype = Object.create(b.Base.prototype), 
    b.Facade.prototype.constructor = b.Facade, "object" == typeof exports && "object" == typeof module ? module.exports = b : "function" == typeof define && define.amd ? define(function() {
        return b;
    }) : "undefined" != typeof a.mixitup && "function" == typeof a.mixitup || (a.mixitup = a.mixItUp = b), 
    (d = a.$ || a.jQuery) && d.fn.jquery && b.registerJqPlugin(d), b.BaseStatic.call(b.constructor), 
    b.NAME = "mixitup", b.CORE_VERSION = "3.1.12";
}(window);

// Avoid `console` errors in browsers that lack a console.
(function() {
    var a;
    var b = function() {};
    var c = [ "assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeline", "timelineEnd", "timeStamp", "trace", "warn" ];
    var d = c.length;
    var e = window.console = window.console || {};
    while (d--) {
        a = c[d];
        // Only stub undefined methods.
        if (!e[a]) {
            e[a] = b;
        }
    }
})();

(function(a) {
    "use strict";
    // Start of use strict
    /* ---------------------------------------------
    Scripts initialization
    --------------------------------------------- */
    a(window).on("load", function() {
        a(".se-pre-con").fadeOut("slow");
        a(window).trigger("scroll");
        a(window).trigger("resize");
    });
    a(function() {
        a(window).trigger("resize");
        j();
        initPageSliders();
    });
    a(window).on("resize", function() {
        i();
    });
    /* --------------------------------------------
     Platform detect
     --------------------------------------------- */
    var b;
    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {
        b = true;
        a("html").addClass("mobile");
    } else {
        b = false;
        a("html").addClass("no-mobile");
    }
    var c;
    if (/mozilla/.test(navigator.userAgent)) {
        c = true;
    } else {
        c = false;
    }
    var d;
    if (/safari/.test(navigator.userAgent)) {
        d = true;
    } else {
        d = false;
    }
    // Detect touch devices    
    if (!("ontouchstart" in document.documentElement)) {
        document.documentElement.className += " no-touch";
    }
    /* ---------------------------------------------
     Sections helpers
     --------------------------------------------- */
    // Sections backgrounds
    var e = a(".home-section, .page-section, .small-section, .split-section");
    e.each(function(b) {
        if (a(this).attr("data-background")) {
            a(this).css("background-image", "url(" + a(this).data("background") + ")");
        }
    });
    // Function for block height 100%
    function f(a, b) {
        a.height(b.height());
        a.css({
            "line-height": b.height() + "px"
        });
    }
    var g = a(".mobile-nav");
    var h = a(".desktop-nav");
    function i() {
        // Mobile menu max height
        a(".mobile-on .desktop-nav > ul").css("max-height", a(window).height() - a(".main-nav").height() - 20 + "px");
        // Mobile menu style toggle
        if (a(window).width() <= 1e3) {
            a(".main-nav").addClass("mobile-on");
        } else if (a(window).width() > 1e3) {
            a(".main-nav").removeClass("mobile-on");
            h.show();
        }
    }
    function j() {
        f(a(".inner-nav > ul > li"), a(".main-nav"));
        f(g, a(".main-nav"));
        // Transpaner menu
        if (a(".main-nav").hasClass("transparent")) {
            a(".main-nav").addClass("js-transparent");
        }
        a(window).scroll(function() {
            if (a(window).scrollTop() > 10) {
                a(".js-transparent").removeClass("transparent");
                a(".main-nav, .nav-logo, .mobile-nav, .nav_download").addClass("small-height");
                a(".nav-download_btn").removeClass("btn-border-w");
            } else {
                a(".js-transparent").addClass("transparent");
                a(".main-nav, .nav-logo, .mobile-nav, .nav_download").removeClass("small-height");
                a(".nav-download_btn").addClass("btn-border-w");
            }
        });
    }
})(jQuery);

// End of use strict
/* ---------------------------------------------
 Sliders
 --------------------------------------------- */
function initPageSliders() {
    (function(a) {
        "use strict";
        // Testimonial Slider
        a("#testimonial__slider").owlCarousel({
            items: 1,
            loop: true,
            nav: true,
            center: true,
            autoHeight: true,
            navText: [ "<i class='fa fa-angle-left'></i>", "<i class='fa fa-angle-right'></i>" ]
        });
        // Client Logo slider
        a("#clients__slider").owlCarousel({
            items: 3,
            loop: true,
            pagination: false,
            nav: true,
            responsiveClass: true,
            dots: false,
            autoplay: true,
            navText: [ "<i class='fa fa-angle-left'></i>", "<i class='fa fa-angle-right'></i>" ],
            responsive: {
                0: {
                    items: 1
                },
                600: {
                    items: 3,
                    slideBy: 3,
                    autoplayHoverPause: true
                }
            }
        });
    })(jQuery);
}

var containerEl = document.querySelector(".mix__container");

var mixer = mixitup(containerEl);